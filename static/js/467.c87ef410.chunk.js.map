{"version":3,"file":"static/js/467.c87ef410.chunk.js","mappings":"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","sources":["../node_modules/three-stdlib/controls/OrbitControls.js","../node_modules/@react-three/drei/core/OrbitControls.js","../node_modules/three-stdlib/objects/Sky.js","../node_modules/@react-three/drei/core/Sky.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { EventDispatcher, Vector3, MOUSE, TOUCH, Quaternion, Spherical, Vector2, PerspectiveCamera, OrthographicCamera } from \"three\";\nconst moduloWrapAround = (offset, capacity) => (offset % capacity + capacity) % capacity;\nclass OrbitControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super();\n    __publicField(this, \"object\");\n    __publicField(this, \"domElement\");\n    // Set to false to disable this control\n    __publicField(this, \"enabled\", true);\n    // \"target\" sets the location of focus, where the object orbits around\n    __publicField(this, \"target\", new Vector3());\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    __publicField(this, \"minDistance\", 0);\n    __publicField(this, \"maxDistance\", Infinity);\n    // How far you can zoom in and out ( OrthographicCamera only )\n    __publicField(this, \"minZoom\", 0);\n    __publicField(this, \"maxZoom\", Infinity);\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    __publicField(this, \"minPolarAngle\", 0);\n    // radians\n    __publicField(this, \"maxPolarAngle\", Math.PI);\n    // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n    __publicField(this, \"minAzimuthAngle\", -Infinity);\n    // radians\n    __publicField(this, \"maxAzimuthAngle\", Infinity);\n    // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    __publicField(this, \"enableDamping\", false);\n    __publicField(this, \"dampingFactor\", 0.05);\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    __publicField(this, \"enableZoom\", true);\n    __publicField(this, \"zoomSpeed\", 1);\n    // Set to false to disable rotating\n    __publicField(this, \"enableRotate\", true);\n    __publicField(this, \"rotateSpeed\", 1);\n    // Set to false to disable panning\n    __publicField(this, \"enablePan\", true);\n    __publicField(this, \"panSpeed\", 1);\n    __publicField(this, \"screenSpacePanning\", true);\n    // if false, pan orthogonal to world-space direction camera.up\n    __publicField(this, \"keyPanSpeed\", 7);\n    // pixels moved per arrow key push\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    __publicField(this, \"autoRotate\", false);\n    __publicField(this, \"autoRotateSpeed\", 2);\n    // 30 seconds per orbit when fps is 60\n    __publicField(this, \"reverseOrbit\", false);\n    // true if you want to reverse the orbit to mouse drag from left to right = orbits left\n    // The four arrow keys\n    __publicField(this, \"keys\", { LEFT: \"ArrowLeft\", UP: \"ArrowUp\", RIGHT: \"ArrowRight\", BOTTOM: \"ArrowDown\" });\n    // Mouse buttons\n    __publicField(this, \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n    // Touch fingers\n    __publicField(this, \"touches\", { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN });\n    __publicField(this, \"target0\");\n    __publicField(this, \"position0\");\n    __publicField(this, \"zoom0\");\n    // the target DOM element for key events\n    __publicField(this, \"_domElementKeyEvents\", null);\n    __publicField(this, \"getPolarAngle\");\n    __publicField(this, \"getAzimuthalAngle\");\n    __publicField(this, \"setPolarAngle\");\n    __publicField(this, \"setAzimuthalAngle\");\n    __publicField(this, \"getDistance\");\n    __publicField(this, \"listenToKeyEvents\");\n    __publicField(this, \"saveState\");\n    __publicField(this, \"reset\");\n    __publicField(this, \"update\");\n    __publicField(this, \"connect\");\n    __publicField(this, \"dispose\");\n    this.object = object;\n    this.domElement = domElement;\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n    this.getPolarAngle = () => spherical.phi;\n    this.getAzimuthalAngle = () => spherical.theta;\n    this.setPolarAngle = (value) => {\n      let phi = moduloWrapAround(value, 2 * Math.PI);\n      let currentPhi = spherical.phi;\n      if (currentPhi < 0)\n        currentPhi += 2 * Math.PI;\n      if (phi < 0)\n        phi += 2 * Math.PI;\n      let phiDist = Math.abs(phi - currentPhi);\n      if (2 * Math.PI - phiDist < phiDist) {\n        if (phi < currentPhi) {\n          phi += 2 * Math.PI;\n        } else {\n          currentPhi += 2 * Math.PI;\n        }\n      }\n      sphericalDelta.phi = phi - currentPhi;\n      scope.update();\n    };\n    this.setAzimuthalAngle = (value) => {\n      let theta = moduloWrapAround(value, 2 * Math.PI);\n      let currentTheta = spherical.theta;\n      if (currentTheta < 0)\n        currentTheta += 2 * Math.PI;\n      if (theta < 0)\n        theta += 2 * Math.PI;\n      let thetaDist = Math.abs(theta - currentTheta);\n      if (2 * Math.PI - thetaDist < thetaDist) {\n        if (theta < currentTheta) {\n          theta += 2 * Math.PI;\n        } else {\n          currentTheta += 2 * Math.PI;\n        }\n      }\n      sphericalDelta.theta = theta - currentTheta;\n      scope.update();\n    };\n    this.getDistance = () => scope.object.position.distanceTo(scope.target);\n    this.listenToKeyEvents = (domElement2) => {\n      domElement2.addEventListener(\"keydown\", onKeyDown);\n      this._domElementKeyEvents = domElement2;\n    };\n    this.saveState = () => {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n    this.reset = () => {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    };\n    this.update = (() => {\n      const offset = new Vector3();\n      const quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n        offset.applyQuaternion(quat);\n        spherical.setFromVector3(offset);\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        }\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI)\n            min += twoPI;\n          else if (min > Math.PI)\n            min -= twoPI;\n          if (max < -Math.PI)\n            max += twoPI;\n          else if (max > Math.PI)\n            max -= twoPI;\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        }\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale;\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius));\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n        offset.setFromSpherical(spherical);\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n        scale = 1;\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n        return false;\n      };\n    })();\n    this.connect = (domElement2) => {\n      if (domElement2 === document) {\n        console.error(\n          'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.'\n        );\n      }\n      scope.domElement = domElement2;\n      scope.domElement.style.touchAction = \"none\";\n      scope.domElement.addEventListener(\"contextmenu\", onContextMenu);\n      scope.domElement.addEventListener(\"pointerdown\", onPointerDown);\n      scope.domElement.addEventListener(\"pointercancel\", onPointerCancel);\n      scope.domElement.addEventListener(\"wheel\", onMouseWheel);\n    };\n    this.dispose = () => {\n      var _a, _b, _c, _d, _e, _f;\n      (_a = scope.domElement) == null ? void 0 : _a.removeEventListener(\"contextmenu\", onContextMenu);\n      (_b = scope.domElement) == null ? void 0 : _b.removeEventListener(\"pointerdown\", onPointerDown);\n      (_c = scope.domElement) == null ? void 0 : _c.removeEventListener(\"pointercancel\", onPointerCancel);\n      (_d = scope.domElement) == null ? void 0 : _d.removeEventListener(\"wheel\", onMouseWheel);\n      (_e = scope.domElement) == null ? void 0 : _e.ownerDocument.removeEventListener(\"pointermove\", onPointerMove);\n      (_f = scope.domElement) == null ? void 0 : _f.ownerDocument.removeEventListener(\"pointerup\", onPointerUp);\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown);\n      }\n    };\n    const scope = this;\n    const changeEvent = { type: \"change\" };\n    const startEvent = { type: \"start\" };\n    const endEvent = { type: \"end\" };\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 1e-6;\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n    let scale = 1;\n    const panOffset = new Vector3();\n    let zoomChanged = false;\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n    const pointers = [];\n    const pointerPositions = {};\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n    function rotateLeft(angle) {\n      if (scope.reverseOrbit) {\n        sphericalDelta.theta += angle;\n      } else {\n        sphericalDelta.theta -= angle;\n      }\n    }\n    function rotateUp(angle) {\n      if (scope.reverseOrbit) {\n        sphericalDelta.phi += angle;\n      } else {\n        sphericalDelta.phi -= angle;\n      }\n    }\n    const panLeft = (() => {\n      const v = new Vector3();\n      return function panLeft2(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    })();\n    const panUp = (() => {\n      const v = new Vector3();\n      return function panUp2(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    })();\n    const pan = (() => {\n      const offset = new Vector3();\n      return function pan2(deltaX, deltaY) {\n        const element = scope.domElement;\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length();\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180);\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          panLeft(\n            deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth,\n            scope.object.matrix\n          );\n          panUp(\n            deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight,\n            scope.object.matrix\n          );\n        } else {\n          console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\");\n          scope.enablePan = false;\n        }\n      };\n    })();\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\");\n        scope.enableZoom = false;\n      }\n    }\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\");\n        scope.enableZoom = false;\n      }\n    }\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n      scope.update();\n    }\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n      if (needsUpdate) {\n        event.preventDefault();\n        scope.update();\n      }\n    }\n    function handleTouchStartRotate() {\n      if (pointers.length == 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n    function handleTouchStartPan() {\n      if (pointers.length == 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX;\n      const dy = pointers[0].pageY - pointers[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom)\n        handleTouchStartDolly();\n      if (scope.enablePan)\n        handleTouchStartPan();\n    }\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom)\n        handleTouchStartDolly();\n      if (scope.enableRotate)\n        handleTouchStartRotate();\n    }\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n    }\n    function handleTouchMovePan(event) {\n      if (pointers.length == 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event);\n      const dx = event.pageX - position.x;\n      const dy = event.pageY - position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom)\n        handleTouchMoveDolly(event);\n      if (scope.enablePan)\n        handleTouchMovePan(event);\n    }\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom)\n        handleTouchMoveDolly(event);\n      if (scope.enableRotate)\n        handleTouchMoveRotate(event);\n    }\n    function onPointerDown(event) {\n      var _a, _b;\n      if (scope.enabled === false)\n        return;\n      if (pointers.length === 0) {\n        (_a = scope.domElement) == null ? void 0 : _a.ownerDocument.addEventListener(\"pointermove\", onPointerMove);\n        (_b = scope.domElement) == null ? void 0 : _b.ownerDocument.addEventListener(\"pointerup\", onPointerUp);\n      }\n      addPointer(event);\n      if (event.pointerType === \"touch\") {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n    function onPointerMove(event) {\n      if (scope.enabled === false)\n        return;\n      if (event.pointerType === \"touch\") {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n    function onPointerUp(event) {\n      var _a, _b, _c;\n      removePointer(event);\n      if (pointers.length === 0) {\n        (_a = scope.domElement) == null ? void 0 : _a.releasePointerCapture(event.pointerId);\n        (_b = scope.domElement) == null ? void 0 : _b.ownerDocument.removeEventListener(\"pointermove\", onPointerMove);\n        (_c = scope.domElement) == null ? void 0 : _c.ownerDocument.removeEventListener(\"pointerup\", onPointerUp);\n      }\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n    function onPointerCancel(event) {\n      removePointer(event);\n    }\n    function onMouseDown(event) {\n      let mouseAction;\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n        default:\n          mouseAction = -1;\n      }\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false)\n            return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false)\n              return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false)\n              return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n          break;\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false)\n              return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false)\n              return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onMouseMove(event) {\n      if (scope.enabled === false)\n        return;\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false)\n            return;\n          handleMouseMoveRotate(event);\n          break;\n        case STATE.DOLLY:\n          if (scope.enableZoom === false)\n            return;\n          handleMouseMoveDolly(event);\n          break;\n        case STATE.PAN:\n          if (scope.enablePan === false)\n            return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false)\n        return;\n      handleKeyDown(event);\n    }\n    function onTouchStart(event) {\n      trackPointer(event);\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false)\n                return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n            case TOUCH.PAN:\n              if (scope.enablePan === false)\n                return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false)\n                return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false)\n                return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onTouchMove(event) {\n      trackPointer(event);\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false)\n            return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false)\n            return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false)\n            return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false)\n            return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n        default:\n          state = STATE.NONE;\n      }\n    }\n    function onContextMenu(event) {\n      if (scope.enabled === false)\n        return;\n      event.preventDefault();\n    }\n    function addPointer(event) {\n      pointers.push(event);\n    }\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId];\n      if (position === void 0) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n      position.set(event.pageX, event.pageY);\n    }\n    function getSecondPointerPosition(event) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    }\n    if (domElement !== void 0)\n      this.connect(domElement);\n    this.update();\n  }\n}\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false;\n    this.mouseButtons.LEFT = MOUSE.PAN;\n    this.mouseButtons.RIGHT = MOUSE.ROTATE;\n    this.touches.ONE = TOUCH.PAN;\n    this.touches.TWO = TOUCH.DOLLY_ROTATE;\n  }\n}\nexport {\n  MapControls,\n  OrbitControls\n};\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\n\nconst OrbitControls = /*#__PURE__*/React.forwardRef(({\n  makeDefault,\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  keyEvents = false,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(state => state.invalidate);\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const setEvents = useThree(state => state.setEvents);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const performance = useThree(state => state.performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  }, -1);\n  React.useEffect(() => {\n    if (keyEvents) {\n      controls.connect(keyEvents === true ? explDomElement : keyEvents);\n    }\n\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [keyEvents, explDomElement, regress, controls, invalidate]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n\n    const onStartCb = e => {\n      if (onStart) onStart(e);\n    };\n\n    const onEndCb = e => {\n      if (onEnd) onEnd(e);\n    };\n\n    controls.addEventListener('change', callback);\n    controls.addEventListener('start', onStartCb);\n    controls.addEventListener('end', onEndCb);\n    return () => {\n      controls.removeEventListener('start', onStartCb);\n      controls.removeEventListener('end', onEndCb);\n      controls.removeEventListener('change', callback);\n    };\n  }, [onChange, onStart, onEnd, controls, invalidate, setEvents]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\n\nexport { OrbitControls };\n","var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Vector3, ShaderMaterial, UniformsUtils, BackSide, Mesh, BoxGeometry } from \"three\";\nconst SkyShader = {\n  uniforms: {\n    turbidity: { value: 2 },\n    rayleigh: { value: 1 },\n    mieCoefficient: { value: 5e-3 },\n    mieDirectionalG: { value: 0.8 },\n    sunPosition: { value: /* @__PURE__ */ new Vector3() },\n    up: { value: /* @__PURE__ */ new Vector3(0, 1, 0) }\n  },\n  vertexShader: (\n    /* glsl */\n    `\n      uniform vec3 sunPosition;\n      uniform float rayleigh;\n      uniform float turbidity;\n      uniform float mieCoefficient;\n      uniform vec3 up;\n\n      varying vec3 vWorldPosition;\n      varying vec3 vSunDirection;\n      varying float vSunfade;\n      varying vec3 vBetaR;\n      varying vec3 vBetaM;\n      varying float vSunE;\n\n      // constants for atmospheric scattering\n      const float e = 2.71828182845904523536028747135266249775724709369995957;\n      const float pi = 3.141592653589793238462643383279502884197169;\n\n      // wavelength of used primaries, according to preetham\n      const vec3 lambda = vec3( 680E-9, 550E-9, 450E-9 );\n      // this pre-calcuation replaces older TotalRayleigh(vec3 lambda) function:\n      // (8.0 * pow(pi, 3.0) * pow(pow(n, 2.0) - 1.0, 2.0) * (6.0 + 3.0 * pn)) / (3.0 * N * pow(lambda, vec3(4.0)) * (6.0 - 7.0 * pn))\n      const vec3 totalRayleigh = vec3( 5.804542996261093E-6, 1.3562911419845635E-5, 3.0265902468824876E-5 );\n\n      // mie stuff\n      // K coefficient for the primaries\n      const float v = 4.0;\n      const vec3 K = vec3( 0.686, 0.678, 0.666 );\n      // MieConst = pi * pow( ( 2.0 * pi ) / lambda, vec3( v - 2.0 ) ) * K\n      const vec3 MieConst = vec3( 1.8399918514433978E14, 2.7798023919660528E14, 4.0790479543861094E14 );\n\n      // earth shadow hack\n      // cutoffAngle = pi / 1.95;\n      const float cutoffAngle = 1.6110731556870734;\n      const float steepness = 1.5;\n      const float EE = 1000.0;\n\n      float sunIntensity( float zenithAngleCos ) {\n        zenithAngleCos = clamp( zenithAngleCos, -1.0, 1.0 );\n        return EE * max( 0.0, 1.0 - pow( e, -( ( cutoffAngle - acos( zenithAngleCos ) ) / steepness ) ) );\n      }\n\n      vec3 totalMie( float T ) {\n        float c = ( 0.2 * T ) * 10E-18;\n        return 0.434 * c * MieConst;\n      }\n\n      void main() {\n\n        vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n        vWorldPosition = worldPosition.xyz;\n\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        gl_Position.z = gl_Position.w; // set z to camera.far\n\n        vSunDirection = normalize( sunPosition );\n\n        vSunE = sunIntensity( dot( vSunDirection, up ) );\n\n        vSunfade = 1.0 - clamp( 1.0 - exp( ( sunPosition.y / 450000.0 ) ), 0.0, 1.0 );\n\n        float rayleighCoefficient = rayleigh - ( 1.0 * ( 1.0 - vSunfade ) );\n\n      // extinction (absorbtion + out scattering)\n      // rayleigh coefficients\n        vBetaR = totalRayleigh * rayleighCoefficient;\n\n      // mie coefficients\n        vBetaM = totalMie( turbidity ) * mieCoefficient;\n\n      }\n    `\n  ),\n  fragmentShader: (\n    /* glsl */\n    `\n      varying vec3 vWorldPosition;\n      varying vec3 vSunDirection;\n      varying float vSunfade;\n      varying vec3 vBetaR;\n      varying vec3 vBetaM;\n      varying float vSunE;\n\n      uniform float mieDirectionalG;\n      uniform vec3 up;\n\n      const vec3 cameraPos = vec3( 0.0, 0.0, 0.0 );\n\n      // constants for atmospheric scattering\n      const float pi = 3.141592653589793238462643383279502884197169;\n\n      const float n = 1.0003; // refractive index of air\n      const float N = 2.545E25; // number of molecules per unit volume for air at 288.15K and 1013mb (sea level -45 celsius)\n\n      // optical length at zenith for molecules\n      const float rayleighZenithLength = 8.4E3;\n      const float mieZenithLength = 1.25E3;\n      // 66 arc seconds -> degrees, and the cosine of that\n      const float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;\n\n      // 3.0 / ( 16.0 * pi )\n      const float THREE_OVER_SIXTEENPI = 0.05968310365946075;\n      // 1.0 / ( 4.0 * pi )\n      const float ONE_OVER_FOURPI = 0.07957747154594767;\n\n      float rayleighPhase( float cosTheta ) {\n        return THREE_OVER_SIXTEENPI * ( 1.0 + pow( cosTheta, 2.0 ) );\n      }\n\n      float hgPhase( float cosTheta, float g ) {\n        float g2 = pow( g, 2.0 );\n        float inverse = 1.0 / pow( 1.0 - 2.0 * g * cosTheta + g2, 1.5 );\n        return ONE_OVER_FOURPI * ( ( 1.0 - g2 ) * inverse );\n      }\n\n      void main() {\n\n        vec3 direction = normalize( vWorldPosition - cameraPos );\n\n      // optical length\n      // cutoff angle at 90 to avoid singularity in next formula.\n        float zenithAngle = acos( max( 0.0, dot( up, direction ) ) );\n        float inverse = 1.0 / ( cos( zenithAngle ) + 0.15 * pow( 93.885 - ( ( zenithAngle * 180.0 ) / pi ), -1.253 ) );\n        float sR = rayleighZenithLength * inverse;\n        float sM = mieZenithLength * inverse;\n\n      // combined extinction factor\n        vec3 Fex = exp( -( vBetaR * sR + vBetaM * sM ) );\n\n      // in scattering\n        float cosTheta = dot( direction, vSunDirection );\n\n        float rPhase = rayleighPhase( cosTheta * 0.5 + 0.5 );\n        vec3 betaRTheta = vBetaR * rPhase;\n\n        float mPhase = hgPhase( cosTheta, mieDirectionalG );\n        vec3 betaMTheta = vBetaM * mPhase;\n\n        vec3 Lin = pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * ( 1.0 - Fex ), vec3( 1.5 ) );\n        Lin *= mix( vec3( 1.0 ), pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * Fex, vec3( 1.0 / 2.0 ) ), clamp( pow( 1.0 - dot( up, vSunDirection ), 5.0 ), 0.0, 1.0 ) );\n\n      // nightsky\n        float theta = acos( direction.y ); // elevation --> y-axis, [-pi/2, pi/2]\n        float phi = atan( direction.z, direction.x ); // azimuth --> x-axis [-pi/2, pi/2]\n        vec2 uv = vec2( phi, theta ) / vec2( 2.0 * pi, pi ) + vec2( 0.5, 0.0 );\n        vec3 L0 = vec3( 0.1 ) * Fex;\n\n      // composition + solar disc\n        float sundisk = smoothstep( sunAngularDiameterCos, sunAngularDiameterCos + 0.00002, cosTheta );\n        L0 += ( vSunE * 19000.0 * Fex ) * sundisk;\n\n        vec3 texColor = ( Lin + L0 ) * 0.04 + vec3( 0.0, 0.0003, 0.00075 );\n\n        vec3 retColor = pow( texColor, vec3( 1.0 / ( 1.2 + ( 1.2 * vSunfade ) ) ) );\n\n        gl_FragColor = vec4( retColor, 1.0 );\n\n      #include <tonemapping_fragment>\n      #include <encodings_fragment>\n\n      }\n    `\n  )\n};\nconst material = /* @__PURE__ */ new ShaderMaterial({\n  name: \"SkyShader\",\n  fragmentShader: SkyShader.fragmentShader,\n  vertexShader: SkyShader.vertexShader,\n  uniforms: /* @__PURE__ */ UniformsUtils.clone(SkyShader.uniforms),\n  side: BackSide,\n  depthWrite: false\n});\nclass Sky extends Mesh {\n  constructor() {\n    super(new BoxGeometry(1, 1, 1), material);\n  }\n}\n__publicField(Sky, \"SkyShader\", SkyShader);\n__publicField(Sky, \"material\", material);\nexport {\n  Sky\n};\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Sky as Sky$1 } from 'three-stdlib';\nimport { Vector3 } from 'three';\n\nfunction calcPosFromAngles(inclination, azimuth, vector = new Vector3()) {\n  const theta = Math.PI * (inclination - 0.5);\n  const phi = 2 * Math.PI * (azimuth - 0.5);\n  vector.x = Math.cos(phi);\n  vector.y = Math.sin(theta);\n  vector.z = Math.sin(phi);\n  return vector;\n}\nconst Sky = /*#__PURE__*/React.forwardRef(({\n  inclination = 0.6,\n  azimuth = 0.1,\n  distance = 1000,\n  mieCoefficient = 0.005,\n  mieDirectionalG = 0.8,\n  rayleigh = 0.5,\n  turbidity = 10,\n  sunPosition = calcPosFromAngles(inclination, azimuth),\n  ...props\n}, ref) => {\n  const scale = React.useMemo(() => new Vector3().setScalar(distance), [distance]);\n  const [sky] = React.useState(() => new Sky$1());\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: sky,\n    ref: ref,\n    \"material-uniforms-mieCoefficient-value\": mieCoefficient,\n    \"material-uniforms-mieDirectionalG-value\": mieDirectionalG,\n    \"material-uniforms-rayleigh-value\": rayleigh,\n    \"material-uniforms-sunPosition-value\": sunPosition,\n    \"material-uniforms-turbidity-value\": turbidity,\n    scale: scale\n  }, props));\n});\n\nexport { Sky, calcPosFromAngles };\n"],"names":["__defProp","Object","defineProperty","__publicField","obj","key","value","enumerable","configurable","writable","__defNormalProp","moduloWrapAround","offset","capacity","OrbitControls","_EventDispatcher","_inherits","_super","_createSuper","object","domElement","_this","_classCallCheck","call","_assertThisInitialized","Vector3","Infinity","Math","PI","LEFT","UP","RIGHT","BOTTOM","MOUSE","MIDDLE","ONE","TOUCH","TWO","target0","target","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","setPolarAngle","currentPhi","phiDist","abs","sphericalDelta","scope","update","setAzimuthalAngle","currentTheta","thetaDist","getDistance","distanceTo","listenToKeyEvents","domElement2","addEventListener","onKeyDown","_domElementKeyEvents","saveState","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","state","STATE","NONE","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","autoRotate","rotateLeft","autoRotateSpeed","enableDamping","dampingFactor","min","minAzimuthAngle","max","maxAzimuthAngle","isFinite","minPolarAngle","maxPolarAngle","makeSafe","radius","scale","minDistance","maxDistance","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","connect","document","console","error","style","touchAction","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","dispose","_a","_b","_c","_d","_e","_f","removeEventListener","ownerDocument","onPointerMove","onPointerUp","type","startEvent","endEvent","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","zoomSpeed","angle","reverseOrbit","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","screenSpacePanning","crossVectors","pan","deltaX","deltaY","element","PerspectiveCamera","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","OrthographicCamera","isOrthographicCamera","right","left","clientWidth","top","bottom","warn","enablePan","dollyOut","dollyScale","minZoom","maxZoom","enableZoom","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","rotateSpeed","handleTouchMovePan","panSpeed","handleTouchMoveDolly","enabled","push","addPointer","pointerType","trackPointer","touches","enableRotate","onTouchStart","mouseAction","button","mouseButtons","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","removePointer","releasePointerCapture","pointerId","preventDefault","handleMouseWheel","needsUpdate","code","keys","keyPanSpeed","handleKeyDown","i","splice","pointer","_createClass","EventDispatcher","React","_ref","ref","makeDefault","camera","regress","_ref$enableDamping","_ref$keyEvents","keyEvents","onChange","onStart","onEnd","restProps","_objectWithoutProperties","_excluded","invalidate","useThree","defaultCamera","gl","events","setEvents","get","performance","explCamera","explDomElement","connected","controls","OrbitControls$1","useFrame","callback","e","onStartCb","onEndCb","old","_extends","SkyShader","uniforms","turbidity","rayleigh","mieCoefficient","mieDirectionalG","sunPosition","vertexShader","fragmentShader","material","ShaderMaterial","name","UniformsUtils","side","BackSide","depthWrite","Sky","_Mesh","BoxGeometry","Mesh","_ref$inclination","inclination","_ref$azimuth","azimuth","_ref$distance","_ref$mieCoefficient","_ref$mieDirectionalG","_ref$rayleigh","_ref$turbidity","_ref$sunPosition","vector","arguments","undefined","cos","sin","z","calcPosFromAngles","props","setScalar","_React$useState","Sky$1","sky","_slicedToArray"],"sourceRoot":""}