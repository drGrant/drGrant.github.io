{"version":3,"file":"static/js/959.8845db62.chunk.js","mappings":"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","sources":["hooks/useMouseMoving.js","hooks/useScroll.js","hooks/useForwardRaycast.js","hooks/useResize.js","../node_modules/@react-three/drei/core/Stars.js","cannon/shpere.js","three/Ship.js","pages/spaceJam.js","three/SurRise.jsx","three/planet.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport default function useMouseMoving(){\r\n  const [mousePosition, setMousePosition] = useState({\r\n    x: 0,\r\n    y:0,\r\n  });\r\n\r\n  const getMouseEvent = (event) => {\r\n    setMousePosition({\r\n      x: event.clientX,\r\n      y: event.clientY,\r\n    });\r\n  };\r\n\r\n  // Add event listeners\r\n  useEffect(() => {\r\n    window.addEventListener(\"mousemove\", getMouseEvent);\r\n    // Remove event listeners on cleanup\r\n    return () => {\r\n      window.removeEventListener(\"mousemove\", getMouseEvent);\r\n    };\r\n  }, []);\r\n\r\n  return mousePosition;\r\n};\r\n","import { useEffect } from \"react\";\r\n\r\nconst useScroll = (callback) => {\r\n  const resizeHandler = (event) => \r\n    callback(event);\r\n  \r\n  // Add event listeners\r\n  useEffect(() => {\r\n    window.addEventListener(\"wheel\", resizeHandler);\r\n    // Remove event listeners on cleanup\r\n    return () => {\r\n      window.removeEventListener(\"wheel\", resizeHandler);\r\n    };\r\n  });\r\n};\r\n\r\nexport default useScroll;\r\n","import { useThree } from '@react-three/fiber'\r\nimport { useMemo } from 'react'\r\nimport { Raycaster, Vector3 } from 'three'\r\n\r\nexport default function useForwardRaycast(obj)  {\r\n  const raycaster = useMemo(() => new Raycaster(), [])\r\n  const pos = useMemo(() => new Vector3(), [])\r\n  const dir = useMemo(() => new Vector3(), [])\r\n  const scene = useThree((state) => state.scene)\r\n\r\n  return () => {\r\n    if (!obj.current) return []\r\n    raycaster.set(obj.current.getWorldPosition(pos), obj.current.getWorldDirection(dir))\r\n    return raycaster.intersectObjects(scene.children)\r\n  }\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useResize(){\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  });\r\n\r\n  const resizeHandler = () => {\r\n    setWindowSize({\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    });\r\n  };\r\n\r\n  // Add event listeners\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", resizeHandler);\r\n    // Remove event listeners on cleanup\r\n    return () => {\r\n      window.removeEventListener(\"resize\", resizeHandler);\r\n    };\r\n  }, []);\r\n\r\n  return windowSize;\r\n};\r\n","import * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Color, AdditiveBlending, ShaderMaterial, Vector3, Spherical } from 'three';\n\nclass StarfieldMaterial extends ShaderMaterial {\n  constructor() {\n    super({\n      uniforms: {\n        time: {\n          value: 0.0\n        },\n        fade: {\n          value: 1.0\n        }\n      },\n      vertexShader:\n      /* glsl */\n      `\n      uniform float time;\n      attribute float size;\n      varying vec3 vColor;\n      void main() {\n        vColor = color;\n        vec4 mvPosition = modelViewMatrix * vec4(position, 0.5);\n        gl_PointSize = size * (30.0 / -mvPosition.z) * (3.0 + sin(time + 100.0));\n        gl_Position = projectionMatrix * mvPosition;\n      }`,\n      fragmentShader:\n      /* glsl */\n      `\n      uniform sampler2D pointTexture;\n      uniform float fade;\n      varying vec3 vColor;\n      void main() {\n        float opacity = 1.0;\n        if (fade == 1.0) {\n          float d = distance(gl_PointCoord, vec2(0.5, 0.5));\n          opacity = 1.0 / (1.0 + exp(16.0 * (d - 0.25)));\n        }\n        gl_FragColor = vec4(vColor, opacity);\n\n        #include <tonemapping_fragment>\n\t      #include <encodings_fragment>\n      }`\n    });\n  }\n\n}\n\nconst genStar = r => {\n  return new Vector3().setFromSpherical(new Spherical(r, Math.acos(1 - Math.random() * 2), Math.random() * 2 * Math.PI));\n};\n\nconst Stars = /*#__PURE__*/React.forwardRef(({\n  radius = 100,\n  depth = 50,\n  count = 5000,\n  saturation = 0,\n  factor = 4,\n  fade = false,\n  speed = 1\n}, ref) => {\n  const material = React.useRef();\n  const [position, color, size] = React.useMemo(() => {\n    const positions = [];\n    const colors = [];\n    const sizes = Array.from({\n      length: count\n    }, () => (0.5 + 0.5 * Math.random()) * factor);\n    const color = new Color();\n    let r = radius + depth;\n    const increment = depth / count;\n\n    for (let i = 0; i < count; i++) {\n      r -= increment * Math.random();\n      positions.push(...genStar(r).toArray());\n      color.setHSL(i / count, saturation, 0.9);\n      colors.push(color.r, color.g, color.b);\n    }\n\n    return [new Float32Array(positions), new Float32Array(colors), new Float32Array(sizes)];\n  }, [count, depth, factor, radius, saturation]);\n  useFrame(state => material.current && (material.current.uniforms.time.value = state.clock.getElapsedTime() * speed));\n  const [starfieldMaterial] = React.useState(() => new StarfieldMaterial());\n  return /*#__PURE__*/React.createElement(\"points\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    args: [position, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    args: [color, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    args: [size, 1]\n  })), /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: material,\n    object: starfieldMaterial,\n    attach: \"material\",\n    blending: AdditiveBlending,\n    \"uniforms-fade-value\": fade,\n    depthWrite: false,\n    transparent: true,\n    vertexColors: true\n  }));\n});\n\nexport { Stars };\n","import { useSphere } from \"@react-three/cannon\";\r\nimport { useRef } from \"react\";\r\nexport default function CannonSphere({ children, args, mass, ...props }) {\r\n  const [ref, api] = useSphere(\r\n    () => ({\r\n      args: args || 1,\r\n      mass: mass || 10,\r\n      ...props,\r\n    }),\r\n    useRef(null)\r\n  );\r\n  return (\r\n    <group\r\n      ref={ref}\r\n      onClick={(e) => {\r\n        api.applyImpulse([0, 105, 0], [0, 3, 0]);\r\n      }}\r\n    >\r\n      {children}\r\n    </group>\r\n  );\r\n}\r\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useFrame } from '@react-three/fiber'\nimport { useGLTF } from '@react-three/drei'\n\nexport default function SmallRoom ({ animate, ...props }) {\n  const group = useRef()\n  const { nodes} = useGLTF(\"/assets/obj/ship_sm.gltf\")\n  const AnimateFrame = ({ meshRef }) => {\n    useFrame(({ clock }, delta) => {\n      animate({ meshRef, clock, delta })\n    })\n    return null\n  }\n  return (\n    <group ref={group} {...props} dispose={null}>\n      {animate && <AnimateFrame meshRef={group} />}\n      <primitive object={nodes.Scene} ></primitive>\n      \n    </group>\n  )\n}\n\nuseGLTF.preload(\"/assets/obj/ship_sm.gltf\")\n\n","import React, { Suspense } from \"react\";\r\nimport {\r\n  OrbitControls,\r\n  Loader,\r\n  Stars,\r\n  PerspectiveCamera,\r\n} from \"@react-three/drei\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { space, transitionViewIfSupported } from \"../utils/\";\r\nimport {\r\n  EffectComposer,\r\n  DepthOfField,\r\n  Bloom,\r\n  Noise,\r\n  Vignette,\r\n} from \"@react-three/postprocessing\";\r\nimport Planet from \"../three/planet\";\r\nimport TextureOptions from \"../hooks/TextureOptioins\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Physics } from \"@react-three/cannon\";\r\nimport CannonPlane from \"../cannon/plane\";\r\nimport CannonSphere from \"../cannon/shpere\";\r\nimport CannonBox from \"../cannon/box\";\r\nimport Ship from \"../three/Ship\";\r\nimport SunRise from \"../three/SurRise\";\r\nimport CreateText from \"../three/CreateText\";\r\nimport jsonData from '../json/data.json'\r\nexport default function SpaceJam() {\r\n  const { menu } = jsonData;\r\n  const star_factor = 5000;\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className=\"moon flex h-screen w-screen flex-col items-center justify-center\">\r\n      <Suspense fallback={<Loader />}>\r\n        <Canvas performance={{ min: 0.5 }} flat linear shadows>\r\n          <PerspectiveCamera\r\n            makeDefault\r\n            fov={75}\r\n            far={1000}\r\n            near={0.01}\r\n            position={[0, space(2), space(15)]}\r\n            rotation={[space(-.1),space(-.02),0]}\r\n            aspect={window.innerWidth / window.innerHeight}\r\n          />\r\n          <ambientLight color=\"white\" intensity={0.25} />\r\n          <directionalLight\r\n            intensity={5}\r\n            position={[-space(2.4), space(3), -space(4.73)]}\r\n            color=\"#22bad6\"\r\n            castShadow\r\n          />\r\n          <SunRise\r\n            turbidity={0.01}\r\n            azimuth={0.2}\r\n            inclination={0.9}\r\n            mieCoefficient={0.091}\r\n            mieDirectionalG={0.4}\r\n            rayleigh={0.01}\r\n          />\r\n          <fog color=\"black\" attach=\"fog\" near={4} far={1000} />\r\n          <Stars\r\n            radius={0.1}\r\n            depth={1000}\r\n            count={star_factor * 3}\r\n            factor={0}\r\n            saturation={10}\r\n            fade\r\n          />\r\n\r\n          <OrbitControls\r\n            minPolarAngle={space(0.24)}\r\n            maxPolarAngle={space(0.4)}\r\n            maxAzimuthAngle={space(0.5)}\r\n            minAzimuthAngle={space(-0.5)}\r\n            maxDistance={space(20)}\r\n            minDistance={space(12)}\r\n            enablePan={false}\r\n          />\r\n          <Physics\r\n            defaultContactMaterial={{\r\n              contactEquationRelaxation: 0.4,\r\n              friction: 1e-3,\r\n            }}\r\n            gravity={[0, -12, 0]}\r\n            allowSleep\r\n          >\r\n            <CannonPlane\r\n              rotation={[-space(0.5), 0, 0]}\r\n              position={[0, space(-25), 0]}\r\n              userData={{ id: \"floor\" }}\r\n            >\r\n              <mesh receiveShadow>\r\n                <planeGeometry args={[1000, 1000]} />\r\n                <meshLambertMaterial opacity={0} transparent={true} />\r\n              </mesh>\r\n            </CannonPlane>\r\n            <group rotation={[0, space(4), 0]}>\r\n              <CannonSphere\r\n                args={[10]}\r\n                position={[0, 10, space(-3)]}\r\n              >\r\n                <group\r\n                  position={[0, 0, 0]}\r\n                >\r\n                  <Planet\r\n                    bumpScale={0.3}\r\n                    args={[10, 64, 64]}\r\n                    {...TextureOptions(\"textures/moon\")}\r\n                    animate={({ meshRef, delta, clock }) => {\r\n                      if (meshRef?.current) {\r\n                        meshRef.current.rotation.set(\r\n                          0,\r\n                          space(clock.oldTime / 90000),\r\n                          0\r\n                        );\r\n                      }\r\n                    }}\r\n                  />\r\n                </group>\r\n              </CannonSphere>\r\n              <CannonBox\r\n                mass={100}\r\n                args={[80, 10, 5]}\r\n                position={[0, space(14), 0]}\r\n              >\r\n                <CreateText\r\n                  textstring=\"Moon Bowl\"\r\n                  fontSize={10}\r\n                  fontHeight={3}\r\n                  position={[space(-15), 0, 0]}\r\n                />\r\n              </CannonBox>\r\n              <CannonSphere\r\n                args={[60]}\r\n                position={[0, 0, space(-130)]}\r\n                type=\"Static\"\r\n              >\r\n                <Planet\r\n                  bumpScale={0.3}\r\n                  args={[60, 64, 64]}\r\n                  {...TextureOptions(\"textures/earth\")}\r\n                  animate={({ meshRef, delta, clock }) => {\r\n                    if (meshRef?.current) {\r\n                      meshRef.current.rotation.set(\r\n                        0,\r\n                        space(clock.oldTime / 90000),\r\n                        0\r\n                      );\r\n                    }\r\n                  }}\r\n                />\r\n                <group\r\n                  position={[0, space(18), 0]}\r\n                  onClick={() => {\r\n                    transitionViewIfSupported(navigate(menu[1].route));\r\n                  }}\r\n                >\r\n                  <CreateText\r\n                    textstring=\"<-Back\"\r\n                    fontSize={10}\r\n                    fontHeight={0.3}\r\n                    position={[space(3), 0, 0]}\r\n                    hover=\"#ff99cc\"\r\n                  />\r\n                </group>\r\n              </CannonSphere>\r\n            </group>\r\n            <group>\r\n              <CannonBox args={[35, 10, 40]} position={[0, 0, -space(102)]}>\r\n                <group>\r\n                  <Ship />\r\n                </group>\r\n              </CannonBox>\r\n            </group>\r\n          </Physics>\r\n          <EffectComposer>\r\n            <DepthOfField\r\n              focusDistance={30}\r\n              focalLength={500}\r\n              bokehScale={7.5}\r\n              height={10}\r\n            />\r\n            <Bloom luminanceThreshold={40} luminanceSmoothing={9} height={30} />\r\n            <Noise opacity={0.05} />\r\n            <Vignette eskil={true} offset={0.0} darkness={1.1} />\r\n          </EffectComposer>\r\n        </Canvas>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n","import { Sky } from \"@react-three/drei\";\r\nimport { Vector3 } from \"three\";\r\nimport { space } from \"../utils\";\r\nimport { useSpring, animated } from \"@react-spring/three\";\r\n// import { useSnapshot } from \"valtio\";\r\n// import state from \"../store\";\r\nimport { easing } from \"maath\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\n\r\nexport default function SunRise({\r\n  inclination = 0.2,\r\n  azimuth = 0.2,\r\n  mieCoefficient = 0.0,\r\n  mieDirectionalG = 0.6,\r\n  rayleigh = 0,\r\n  turbidity = 1,\r\n}) {\r\n  const [snap, setSnap] = useState({\r\n    lightsOn: false,\r\n  });\r\n  const sunRef = useRef();\r\n  // const snap = useSnapshot(state);\r\n  const springs = useSpring({\r\n    position: snap.lightsOn ? [0, space(0), space(0)] : [0, space(0), 0],\r\n    opacity: snap.lightsOn ? 0 : 0.2,\r\n  });\r\n  let targetPosition = !snap.lightsOn\r\n    ? new Vector3(0, 0.005, -0.1)\r\n    : new Vector3(0, 0.5, -90);\r\n  useFrame((state, delta) => {\r\n    if (!!sunRef.current) {\r\n      easing.damp3(\r\n        sunRef.current.material.uniforms.sunPosition,\r\n        targetPosition,\r\n        0.25,\r\n        delta\r\n      );\r\n    }\r\n  });\r\n  return (\r\n    <animated.group position={springs.position}>\r\n      <Sky\r\n        ref={sunRef}\r\n        distance={window.innerWidth}\r\n        sunPosition={targetPosition}\r\n        inclination={inclination}\r\n        azimuth={azimuth}\r\n        mieCoefficient={mieCoefficient}\r\n        mieDirectionalG={mieDirectionalG}\r\n        rayleigh={rayleigh}\r\n        turbidity={turbidity}\r\n      />\r\n    </animated.group>\r\n  );\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { DoubleSide } from \"three\";\r\nimport {FormatTexture,useForwardRaycast} from \"../hooks\";\r\nconst Planet = ({\r\n  heightMapSrc,\r\n  AO,\r\n  bumpScale,\r\n  smokeScale,\r\n  textureMapSrc,\r\n  normalMapSrc,\r\n  smoothMapSrc,\r\n  metallicMapSrc,\r\n  edgeMapSrc,\r\n  args,\r\n  animate,\r\n  ...props\r\n}) => {\r\n  // not sure where to add this map will do rnd\r\n  // const smoothMap = FormatTexture(smoothMapSrc);\r\n\r\n  const heightMap = FormatTexture(heightMapSrc);\r\n  const AoTextureMap = FormatTexture(AO);\r\n  const textureMap = FormatTexture(textureMapSrc);\r\n  const normalMap = FormatTexture(normalMapSrc);\r\n  const metallicMap = FormatTexture(metallicMapSrc);\r\n  const edgeMap = FormatTexture(edgeMapSrc);\r\n  const TerrainMaterialRef = useRef();\r\n  const raycast = useForwardRaycast(TerrainMaterialRef);\r\n  const AnimateFrame = ({ meshRef }) => {\r\n    useFrame(({ clock }, delta) => {\r\n      animate({ meshRef, clock, delta,raycast });\r\n    });\r\n  };\r\n  return (\r\n      <mesh transparent={true}  {...props} ref={TerrainMaterialRef}>\r\n      {animate && <AnimateFrame meshRef={TerrainMaterialRef} />}\r\n        <sphereGeometry\r\n          attach=\"geometry\"\r\n          args={args}\r\n          receiveShadow\r\n          transparent={true}\r\n        />\r\n        <meshPhongMaterial\r\n          bumpScale={bumpScale}\r\n          attach=\"material\"\r\n          map={textureMap}\r\n          aoMap={AoTextureMap}\r\n          bumpMap={heightMap}\r\n          lightMap={edgeMap}\r\n          metalnessMap={metallicMap}\r\n          normalMap={normalMap}\r\n          side={DoubleSide}\r\n        />\r\n      </mesh>\r\n  );\r\n};\r\nexport default Planet;\r\n"],"names":["useMouseMoving","_useState","useState","x","y","_useState2","_slicedToArray","mousePosition","setMousePosition","getMouseEvent","event","clientX","clientY","useEffect","window","addEventListener","removeEventListener","callback","resizeHandler","useForwardRaycast","obj","raycaster","useMemo","Raycaster","pos","Vector3","dir","scene","useThree","state","current","set","getWorldPosition","getWorldDirection","intersectObjects","children","useResize","width","innerWidth","height","innerHeight","windowSize","setWindowSize","StarfieldMaterial","_ShaderMaterial","_inherits","_super","_createSuper","_classCallCheck","call","uniforms","time","value","fade","vertexShader","fragmentShader","_createClass","ShaderMaterial","genStar","r","setFromSpherical","Spherical","Math","acos","random","PI","Stars","React","_ref","ref","_ref$radius","radius","_ref$depth","depth","_ref$count","count","_ref$saturation","saturation","_ref$factor","factor","_ref$fade","_ref$speed","speed","material","_React$useMemo","positions","colors","sizes","Array","from","length","color","Color","increment","i","push","apply","_toConsumableArray","toArray","setHSL","g","b","Float32Array","_React$useMemo2","position","size","useFrame","clock","getElapsedTime","_React$useState","starfieldMaterial","attach","args","object","blending","AdditiveBlending","depthWrite","transparent","vertexColors","CannonSphere","mass","props","_objectWithoutProperties","_excluded","_useSphere","useSphere","_objectSpread","useRef","_useSphere2","api","_jsx","onClick","e","applyImpulse","SmallRoom","animate","group","nodes","useGLTF","AnimateFrame","_ref2","meshRef","_ref3","delta","_jsxs","dispose","Scene","SpaceJam","menu","jsonData","navigate","useNavigate","className","Suspense","fallback","Loader","Canvas","performance","min","flat","linear","shadows","PerspectiveCamera","makeDefault","fov","far","near","space","rotation","aspect","intensity","castShadow","SunRise","turbidity","azimuth","inclination","mieCoefficient","mieDirectionalG","rayleigh","star_factor","OrbitControls","minPolarAngle","maxPolarAngle","maxAzimuthAngle","minAzimuthAngle","maxDistance","minDistance","enablePan","Physics","defaultContactMaterial","contactEquationRelaxation","friction","gravity","allowSleep","CannonPlane","userData","id","receiveShadow","opacity","Planet","bumpScale","TextureOptions","oldTime","CannonBox","CreateText","textstring","fontSize","fontHeight","type","transitionViewIfSupported","route","hover","Ship","EffectComposer","DepthOfField","focusDistance","focalLength","bokehScale","Bloom","luminanceThreshold","luminanceSmoothing","Noise","Vignette","eskil","offset","darkness","_ref$inclination","_ref$azimuth","_ref$mieCoefficient","_ref$mieDirectionalG","_ref$rayleigh","_ref$turbidity","lightsOn","snap","sunRef","springs","useSpring","targetPosition","easing","sunPosition","animated","Sky","distance","heightMapSrc","AO","textureMapSrc","smokeScale","normalMapSrc","metallicMapSrc","smoothMapSrc","edgeMapSrc","heightMap","FormatTexture","AoTextureMap","textureMap","normalMap","metallicMap","edgeMap","TerrainMaterialRef","raycast","map","aoMap","bumpMap","lightMap","metalnessMap","side","DoubleSide"],"sourceRoot":""}