{"version":3,"file":"static/js/909.7df19d9e.chunk.js","mappings":"gWAEe,SAASA,EAAYC,GAAsC,IAAnCC,EAAQD,EAARC,SAAUC,EAAIF,EAAJE,KAAMC,EAAIH,EAAJG,KAASC,GAAKC,EAAAA,EAAAA,GAAAL,EAAAM,GACnEC,GAAmBC,EAAAA,EAAAA,KACjB,kBAAAC,EAAAA,EAAAA,GAAC,CACCP,KAAMA,GAAQ,EACdC,KAAMA,GAAQ,IACXC,EAAK,IAEVM,EAAAA,EAAAA,QAAO,OACRC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAPMM,EAAGF,EAAA,GAAEG,EAAGH,EAAA,GAQf,OACEI,EAAAA,EAAAA,KAAA,SACEF,IAAKA,EACLG,QAAS,SAACC,GACRH,EAAII,aAAa,CAAC,EAAG,IAAK,GAAI,CAAC,EAAG,EAAG,GACvC,EAAEjB,SAEDA,GAGP,C,gDCbe,SAASkB,EAASnB,GAA0B,IAAtBoB,EAAOpB,EAAPoB,QAAYhB,GAAKC,EAAAA,EAAAA,GAAAL,EAAAM,GAC9Ce,GAAQX,EAAAA,EAAAA,UACNY,GAASC,EAAAA,EAAAA,GAAQ,4BAAjBD,MACFE,EAAe,SAAHC,GAAqB,IAAfC,EAAOD,EAAPC,QAItB,OAHAC,EAAAA,EAAAA,IAAS,SAAAC,EAAYC,GAAW,IAApBC,EAAKF,EAALE,MACVV,EAAQ,CAAEM,QAAAA,EAASI,MAAAA,EAAOD,MAAAA,GAC5B,IACO,IACT,EACA,OACEE,EAAAA,EAAAA,MAAA,SAAAtB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAOI,IAAKQ,GAAWjB,GAAK,IAAE4B,QAAS,KAAK/B,SAAA,CACzCmB,IAAWL,EAAAA,EAAAA,KAACS,EAAY,CAACE,QAASL,KACnCN,EAAAA,EAAAA,KAAA,aAAWkB,OAAQX,EAAMY,WAI/B,CAEAX,EAAAA,EAAAA,QAAgB,4B,kCCCD,SAASY,IACtB,IAAQC,EAASC,EAAAA,GAEXC,GAAWC,EAAAA,EAAAA,MACjB,OACExB,EAAAA,EAAAA,KAAA,OAAKyB,UAAU,mEAAkEvC,UAC/Ec,EAAAA,EAAAA,KAAC0B,EAAAA,SAAQ,CAACC,UAAU3B,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,IAAI1C,UAC7B8B,EAAAA,EAAAA,MAACa,EAAAA,GAAM,CAACC,YAAa,CAAEC,IAAK,IAAOC,MAAI,EAACC,QAAM,EAACC,SAAO,EAAAhD,SAAA,EACpDc,EAAAA,EAAAA,KAACmC,EAAAA,EAAiB,CAChBC,aAAW,EACXC,IAAK,GACLC,IAAK,IACLC,KAAM,IACNC,SAAU,CAAC,GAAGC,EAAAA,EAAAA,IAAM,IAAIA,EAAAA,EAAAA,IAAM,KAC9BC,SAAU,EAACD,EAAAA,EAAAA,KAAO,KAAIA,EAAAA,EAAAA,KAAO,KAAK,GAClCE,OAAQC,OAAOC,WAAaD,OAAOE,eAErC9C,EAAAA,EAAAA,KAAA,gBAAc+C,MAAM,QAAQC,UAAW,OACvChD,EAAAA,EAAAA,KAAA,oBACEgD,UAAW,EACXR,SAAU,GAAEC,EAAAA,EAAAA,IAAM,MAAMA,EAAAA,EAAAA,IAAM,KAAKA,EAAAA,EAAAA,IAAM,OACzCM,MAAM,UACNE,YAAU,KAEZjD,EAAAA,EAAAA,KAACkD,EAAAA,EAAO,CACNC,UAAW,IACXC,QAAS,GACTC,YAAa,GACbC,eAAgB,KAChBC,gBAAiB,GACjBC,SAAU,OAEZxD,EAAAA,EAAAA,KAAA,OAAK+C,MAAM,QAAQU,OAAO,MAAMlB,KAAM,EAAGD,IAAK,OAC9CtC,EAAAA,EAAAA,KAAC0D,EAAAA,EAAK,CACJC,OAAQ,GACRC,MAAO,IACPC,MAAOC,KACPC,OAAQ,EACRC,WAAY,GACZC,MAAI,KAGNjE,EAAAA,EAAAA,KAACkE,EAAAA,EAAa,CACZC,eAAe1B,EAAAA,EAAAA,IAAM,KACrB2B,eAAe3B,EAAAA,EAAAA,IAAM,IACrB4B,iBAAiB5B,EAAAA,EAAAA,IAAM,IACvB6B,iBAAiB7B,EAAAA,EAAAA,KAAO,IACxB8B,aAAa9B,EAAAA,EAAAA,IAAM,IACnB+B,aAAa/B,EAAAA,EAAAA,IAAM,IACnBgC,WAAW,KAEbzD,EAAAA,EAAAA,MAAC0D,EAAAA,GAAO,CACNC,uBAAwB,CACtBC,0BAA2B,GAC3BC,SAAU,MAEZC,QAAS,CAAC,GAAI,GAAI,GAClBC,YAAU,EAAA7F,SAAA,EAEVc,EAAAA,EAAAA,KAACgF,EAAAA,EAAW,CACVtC,SAAU,GAAED,EAAAA,EAAAA,IAAM,IAAM,EAAG,GAC3BD,SAAU,CAAC,GAAGC,EAAAA,EAAAA,KAAO,IAAK,GAC1BwC,SAAU,CAAEC,GAAI,SAAUhG,UAE1B8B,EAAAA,EAAAA,MAAA,QAAMmE,eAAa,EAAAjG,SAAA,EACjBc,EAAAA,EAAAA,KAAA,iBAAeb,KAAM,CAAC,IAAM,QAC5Ba,EAAAA,EAAAA,KAAA,uBAAqBoF,QAAS,EAAGC,aAAa,UAGlDrE,EAAAA,EAAAA,MAAA,SAAO0B,SAAU,CAAC,GAAGD,EAAAA,EAAAA,IAAM,GAAI,GAAGvD,SAAA,EAChCc,EAAAA,EAAAA,KAAChB,EAAY,CACXG,KAAM,CAAC,IACPqD,SAAU,CAAC,EAAG,IAAIC,EAAAA,EAAAA,KAAO,IAAIvD,UAE7Bc,EAAAA,EAAAA,KAAA,SACEwC,SAAU,CAAC,EAAG,EAAG,GAAGtD,UAEpBc,EAAAA,EAAAA,KAACsF,EAAAA,GAAM5F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACL6F,UAAW,GACXpG,KAAM,CAAC,GAAI,GAAI,MACXqG,EAAAA,EAAAA,GAAe,kBAAgB,IACnCnF,QAAS,SAAApB,GAAgC,IAA7B0B,EAAO1B,EAAP0B,QAAgBI,GAAF9B,EAAL6B,MAAY7B,EAAL8B,OACf,OAAPJ,QAAO,IAAPA,GAAAA,EAAS8E,SACX9E,EAAQ8E,QAAQ/C,SAASgD,IACvB,GACAjD,EAAAA,EAAAA,IAAM1B,EAAM4E,QAAU,KACtB,EAGN,UAIN3F,EAAAA,EAAAA,KAAC4F,EAAAA,EAAS,CACRxG,KAAM,IACND,KAAM,CAAC,GAAI,GAAI,GACfqD,SAAU,CAAC,GAAGC,EAAAA,EAAAA,IAAM,IAAK,GAAGvD,UAE5Bc,EAAAA,EAAAA,KAAC6F,EAAAA,EAAU,CACTC,WAAW,YACXC,SAAU,GACVC,WAAY,EACZxD,SAAU,EAACC,EAAAA,EAAAA,KAAO,IAAK,EAAG,QAG9BzB,EAAAA,EAAAA,MAAChC,EAAY,CACXG,KAAM,CAAC,IACPqD,SAAU,CAAC,EAAG,GAAGC,EAAAA,EAAAA,KAAO,MACxBwD,KAAK,SAAQ/G,SAAA,EAEbc,EAAAA,EAAAA,KAACsF,EAAAA,GAAM5F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACL6F,UAAW,GACXpG,KAAM,CAAC,GAAI,GAAI,MACXqG,EAAAA,EAAAA,GAAe,mBAAiB,IACpCnF,QAAS,SAAAK,GAAgC,IAA7BC,EAAOD,EAAPC,QAAgBI,GAAFL,EAALI,MAAYJ,EAALK,OACf,OAAPJ,QAAO,IAAPA,GAAAA,EAAS8E,SACX9E,EAAQ8E,QAAQ/C,SAASgD,IACvB,GACAjD,EAAAA,EAAAA,IAAM1B,EAAM4E,QAAU,KACtB,EAGN,MAEF3F,EAAAA,EAAAA,KAAA,SACEwC,SAAU,CAAC,GAAGC,EAAAA,EAAAA,IAAM,IAAK,GACzBxC,QAAS,YACPiG,EAAAA,EAAAA,IAA0B3E,EAASF,EAAK,GAAG8E,OAC7C,EAAEjH,UAEFc,EAAAA,EAAAA,KAAC6F,EAAAA,EAAU,CACTC,WAAW,SACXC,SAAU,GACVC,WAAY,GACZxD,SAAU,EAACC,EAAAA,EAAAA,IAAM,GAAI,EAAG,GACxB2D,MAAM,qBAKdpG,EAAAA,EAAAA,KAAA,SAAAd,UACEc,EAAAA,EAAAA,KAAC4F,EAAAA,EAAS,CAACzG,KAAM,CAAC,GAAI,GAAI,IAAKqD,SAAU,CAAC,EAAG,IAAIC,EAAAA,EAAAA,IAAM,MAAMvD,UAC3Dc,EAAAA,EAAAA,KAAA,SAAAd,UACEc,EAAAA,EAAAA,KAACqG,EAAI,cAKbrF,EAAAA,EAAAA,MAACsF,EAAAA,GAAc,CAAApH,SAAA,EACbc,EAAAA,EAAAA,KAACuG,EAAAA,GAAY,CACXC,cAAe,GACfC,YAAa,IACbC,WAAY,IACZC,OAAQ,MAEV3G,EAAAA,EAAAA,KAAC4G,EAAAA,GAAK,CAACC,mBAAoB,GAAIC,mBAAoB,EAAGH,OAAQ,MAC9D3G,EAAAA,EAAAA,KAAC+G,EAAAA,GAAK,CAAC3B,QAAS,OAChBpF,EAAAA,EAAAA,KAACgH,EAAAA,GAAQ,CAACC,OAAO,EAAMC,OAAQ,EAAKC,SAAU,eAM1D,C,oJCpLe,SAASjE,EAAOjE,GAO3B,IAADmI,EAAAnI,EANDoE,YAAAA,OAAW,IAAA+D,EAAG,GAAGA,EAAAC,EAAApI,EACjBmE,QAAAA,OAAO,IAAAiE,EAAG,GAAGA,EAAAC,EAAArI,EACbqE,eAAAA,OAAc,IAAAgE,EAAG,EAAGA,EAAAC,EAAAtI,EACpBsE,gBAAAA,OAAe,IAAAgE,EAAG,GAAGA,EAAAC,EAAAvI,EACrBuE,SAAAA,OAAQ,IAAAgE,EAAG,EAACA,EAAAC,EAAAxI,EACZkE,UAAAA,OAAS,IAAAsE,EAAG,EAACA,EAEbC,GAAwBC,EAAAA,EAAAA,UAAS,CAC/BC,UAAU,IACVC,GAAAhI,EAAAA,EAAAA,GAAA6H,EAAA,GAFKI,EAAID,EAAA,GAGLE,GAHcF,EAAA,IAGLlI,EAAAA,EAAAA,WAETqI,GAAUC,EAAAA,EAAAA,IAAU,CACxBzF,SAAUsF,EAAKF,SAAW,CAAC,GAAGnF,EAAAA,EAAAA,IAAM,IAAIA,EAAAA,EAAAA,IAAM,IAAM,CAAC,GAAGA,EAAAA,EAAAA,IAAM,GAAI,GAClE2C,QAAS0C,EAAKF,SAAW,EAAI,KAE3BM,EAAkBJ,EAAKF,SAEvB,IAAIO,EAAAA,QAAQ,EAAG,IAAM,IADrB,IAAIA,EAAAA,QAAQ,EAAG,MAAQ,IAY3B,OAVAvH,EAAAA,EAAAA,IAAS,SAACwH,EAAOtH,GACTiH,EAAOtC,SACX4C,EAAAA,GAAAA,MACEN,EAAOtC,QAAQ6C,SAASC,SAASC,YACjCN,EACA,IACApH,EAGN,KAEEd,EAAAA,EAAAA,KAACyI,EAAAA,EAAAA,MAAc,CAACjG,SAAUwF,EAAQxF,SAAStD,UACzCc,EAAAA,EAAAA,KAAC0I,EAAAA,EAAG,CACF5I,IAAKiI,EACLY,SAAU/F,OAAOC,WACjB2F,YAAaN,EACb7E,YAAaA,EACbD,QAASA,EACTE,eAAgBA,EAChBC,gBAAiBA,EACjBC,SAAUA,EACVL,UAAWA,KAInB,C,8OCGA,IAtDe,SAAHlE,GAaL,IAZL2J,EAAY3J,EAAZ2J,aACAC,EAAE5J,EAAF4J,GACAtD,EAAStG,EAATsG,UAEAuD,GADU7J,EAAV8J,WACa9J,EAAb6J,eACAE,EAAY/J,EAAZ+J,aAEAC,GADYhK,EAAZiK,aACcjK,EAAdgK,gBACAE,EAAUlK,EAAVkK,WACAhK,EAAIF,EAAJE,KACAkB,EAAOpB,EAAPoB,QACGhB,GAAKC,EAAAA,EAAAA,GAAAL,EAAAM,GAKF6J,GAAYC,EAAAA,EAAAA,GAAcT,GAC1BU,GAAeD,EAAAA,EAAAA,GAAcR,GAC7BU,GAAaF,EAAAA,EAAAA,GAAcP,GAC3BU,GAAYH,EAAAA,EAAAA,GAAcL,GAC1BS,GAAcJ,EAAAA,EAAAA,GAAcJ,GAC5BS,GAAUL,EAAAA,EAAAA,GAAcF,GACxBQ,GAAqBhK,EAAAA,EAAAA,UACrBc,EAAe,SAAHC,GAAqB,IAAfC,EAAOD,EAAPC,SACtBC,EAAAA,EAAAA,IAAS,SAAAC,EAAYC,GAAW,IAApBC,EAAKF,EAALE,MACVV,EAAQ,CAAEM,QAAAA,EAASI,MAAAA,EAAOD,MAAAA,GAC5B,GACF,EACA,OACEE,EAAAA,EAAAA,MAAA,SAAAtB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWL,GAAK,IAAAH,SAAA,CACbmB,IAAWL,EAAAA,EAAAA,KAACS,EAAY,CAACE,QAASgJ,KACnC3I,EAAAA,EAAAA,MAAA,QAAMlB,IAAK6J,EAAoBtE,aAAa,EAAKnG,SAAA,EAC/Cc,EAAAA,EAAAA,KAAA,kBACEyD,OAAO,WACPtE,KAAMA,EACNgG,eAAa,EACbE,aAAa,KAEfrF,EAAAA,EAAAA,KAAA,qBACEuF,UAAWA,EACX9B,OAAO,WACPmG,IAAKL,EACLM,MAAOP,EACPQ,QAASV,EACTW,SAAUL,EACVM,aAAcP,EACdD,UAAWA,EACXS,KAAMC,EAAAA,mBAKhB,C","sources":["cannon/shpere.js","three/Ship.js","pages/spaceJam.js","three/SurRise.jsx","three/planet.js"],"sourcesContent":["import { useSphere } from \"@react-three/cannon\";\r\nimport { useRef } from \"react\";\r\nexport default function CannonSphere({ children, args, mass, ...props }) {\r\n  const [ref, api] = useSphere(\r\n    () => ({\r\n      args: args || 1,\r\n      mass: mass || 10,\r\n      ...props,\r\n    }),\r\n    useRef(null)\r\n  );\r\n  return (\r\n    <group\r\n      ref={ref}\r\n      onClick={(e) => {\r\n        api.applyImpulse([0, 105, 0], [0, 3, 0]);\r\n      }}\r\n    >\r\n      {children}\r\n    </group>\r\n  );\r\n}\r\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useFrame } from '@react-three/fiber'\nimport { useGLTF } from '@react-three/drei'\n\nexport default function SmallRoom ({ animate, ...props }) {\n  const group = useRef()\n  const { nodes} = useGLTF(\"/assets/obj/ship_sm.gltf\")\n  const AnimateFrame = ({ meshRef }) => {\n    useFrame(({ clock }, delta) => {\n      animate({ meshRef, clock, delta })\n    })\n    return null\n  }\n  return (\n    <group ref={group} {...props} dispose={null}>\n      {animate && <AnimateFrame meshRef={group} />}\n      <primitive object={nodes.Scene} ></primitive>\n      \n    </group>\n  )\n}\n\nuseGLTF.preload(\"/assets/obj/ship_sm.gltf\")\n\n","import React, { Suspense } from \"react\";\r\nimport {\r\n  OrbitControls,\r\n  Loader,\r\n  Stars,\r\n  PerspectiveCamera,\r\n} from \"@react-three/drei\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { space, transitionViewIfSupported } from \"../utils/\";\r\nimport {\r\n  EffectComposer,\r\n  DepthOfField,\r\n  Bloom,\r\n  Noise,\r\n  Vignette,\r\n} from \"@react-three/postprocessing\";\r\nimport Planet from \"../three/planet\";\r\nimport TextureOptions from \"../hooks/TextureOptioins\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Physics } from \"@react-three/cannon\";\r\nimport CannonPlane from \"../cannon/plane\";\r\nimport CannonSphere from \"../cannon/shpere\";\r\nimport CannonBox from \"../cannon/box\";\r\nimport Ship from \"../three/Ship\";\r\nimport SunRise from \"../three/SurRise\";\r\nimport CreateText from \"../three/CreateText\";\r\nimport jsonData from '../json/data.json'\r\nexport default function SpaceJam() {\r\n  const { menu } = jsonData;\r\n  const star_factor = 5000;\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className=\"moon flex h-screen w-screen flex-col items-center justify-center\">\r\n      <Suspense fallback={<Loader />}>\r\n        <Canvas performance={{ min: 0.5 }} flat linear shadows>\r\n          <PerspectiveCamera\r\n            makeDefault\r\n            fov={75}\r\n            far={1000}\r\n            near={0.01}\r\n            position={[0, space(2), space(15)]}\r\n            rotation={[space(-.1),space(-.02),0]}\r\n            aspect={window.innerWidth / window.innerHeight}\r\n          />\r\n          <ambientLight color=\"white\" intensity={0.25} />\r\n          <directionalLight\r\n            intensity={5}\r\n            position={[-space(2.4), space(3), -space(4.73)]}\r\n            color=\"#22bad6\"\r\n            castShadow\r\n          />\r\n          <SunRise\r\n            turbidity={0.01}\r\n            azimuth={0.2}\r\n            inclination={0.9}\r\n            mieCoefficient={0.091}\r\n            mieDirectionalG={0.4}\r\n            rayleigh={0.01}\r\n          />\r\n          <fog color=\"black\" attach=\"fog\" near={4} far={1000} />\r\n          <Stars\r\n            radius={0.1}\r\n            depth={1000}\r\n            count={star_factor * 3}\r\n            factor={0}\r\n            saturation={10}\r\n            fade\r\n          />\r\n\r\n          <OrbitControls\r\n            minPolarAngle={space(0.24)}\r\n            maxPolarAngle={space(0.4)}\r\n            maxAzimuthAngle={space(0.5)}\r\n            minAzimuthAngle={space(-0.5)}\r\n            maxDistance={space(20)}\r\n            minDistance={space(12)}\r\n            enablePan={false}\r\n          />\r\n          <Physics\r\n            defaultContactMaterial={{\r\n              contactEquationRelaxation: 0.4,\r\n              friction: 1e-3,\r\n            }}\r\n            gravity={[0, -12, 0]}\r\n            allowSleep\r\n          >\r\n            <CannonPlane\r\n              rotation={[-space(0.5), 0, 0]}\r\n              position={[0, space(-25), 0]}\r\n              userData={{ id: \"floor\" }}\r\n            >\r\n              <mesh receiveShadow>\r\n                <planeGeometry args={[1000, 1000]} />\r\n                <meshLambertMaterial opacity={0} transparent={true} />\r\n              </mesh>\r\n            </CannonPlane>\r\n            <group rotation={[0, space(4), 0]}>\r\n              <CannonSphere\r\n                args={[10]}\r\n                position={[0, 10, space(-3)]}\r\n              >\r\n                <group\r\n                  position={[0, 0, 0]}\r\n                >\r\n                  <Planet\r\n                    bumpScale={0.3}\r\n                    args={[10, 64, 64]}\r\n                    {...TextureOptions(\"textures/moon\")}\r\n                    animate={({ meshRef, delta, clock }) => {\r\n                      if (meshRef?.current) {\r\n                        meshRef.current.rotation.set(\r\n                          0,\r\n                          space(clock.oldTime / 90000),\r\n                          0\r\n                        );\r\n                      }\r\n                    }}\r\n                  />\r\n                </group>\r\n              </CannonSphere>\r\n              <CannonBox\r\n                mass={100}\r\n                args={[80, 10, 5]}\r\n                position={[0, space(14), 0]}\r\n              >\r\n                <CreateText\r\n                  textstring=\"Moon Bowl\"\r\n                  fontSize={10}\r\n                  fontHeight={3}\r\n                  position={[space(-15), 0, 0]}\r\n                />\r\n              </CannonBox>\r\n              <CannonSphere\r\n                args={[60]}\r\n                position={[0, 0, space(-130)]}\r\n                type=\"Static\"\r\n              >\r\n                <Planet\r\n                  bumpScale={0.3}\r\n                  args={[60, 64, 64]}\r\n                  {...TextureOptions(\"textures/earth\")}\r\n                  animate={({ meshRef, delta, clock }) => {\r\n                    if (meshRef?.current) {\r\n                      meshRef.current.rotation.set(\r\n                        0,\r\n                        space(clock.oldTime / 90000),\r\n                        0\r\n                      );\r\n                    }\r\n                  }}\r\n                />\r\n                <group\r\n                  position={[0, space(18), 0]}\r\n                  onClick={() => {\r\n                    transitionViewIfSupported(navigate(menu[1].route));\r\n                  }}\r\n                >\r\n                  <CreateText\r\n                    textstring=\"<-Back\"\r\n                    fontSize={10}\r\n                    fontHeight={0.3}\r\n                    position={[space(3), 0, 0]}\r\n                    hover=\"#ff99cc\"\r\n                  />\r\n                </group>\r\n              </CannonSphere>\r\n            </group>\r\n            <group>\r\n              <CannonBox args={[35, 10, 40]} position={[0, 0, -space(102)]}>\r\n                <group>\r\n                  <Ship />\r\n                </group>\r\n              </CannonBox>\r\n            </group>\r\n          </Physics>\r\n          <EffectComposer>\r\n            <DepthOfField\r\n              focusDistance={30}\r\n              focalLength={500}\r\n              bokehScale={7.5}\r\n              height={10}\r\n            />\r\n            <Bloom luminanceThreshold={40} luminanceSmoothing={9} height={30} />\r\n            <Noise opacity={0.05} />\r\n            <Vignette eskil={true} offset={0.0} darkness={1.1} />\r\n          </EffectComposer>\r\n        </Canvas>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n","import { Sky } from \"@react-three/drei\";\r\nimport { Vector3 } from \"three\";\r\nimport { space } from \"../utils\";\r\nimport { useSpring, animated } from \"@react-spring/three\";\r\n// import { useSnapshot } from \"valtio\";\r\n// import state from \"../store\";\r\nimport { easing } from \"maath\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\n\r\nexport default function SunRise({\r\n  inclination = 0.2,\r\n  azimuth = 0.2,\r\n  mieCoefficient = 0.0,\r\n  mieDirectionalG = 0.6,\r\n  rayleigh = 0,\r\n  turbidity = 1,\r\n}) {\r\n  const [snap, setSnap] = useState({\r\n    lightsOn: false,\r\n  });\r\n  const sunRef = useRef();\r\n  // const snap = useSnapshot(state);\r\n  const springs = useSpring({\r\n    position: snap.lightsOn ? [0, space(0), space(0)] : [0, space(0), 0],\r\n    opacity: snap.lightsOn ? 0 : 0.2,\r\n  });\r\n  let targetPosition = !snap.lightsOn\r\n    ? new Vector3(0, 0.005, -0.1)\r\n    : new Vector3(0, 0.5, -90);\r\n  useFrame((state, delta) => {\r\n    if (!!sunRef.current) {\r\n      easing.damp3(\r\n        sunRef.current.material.uniforms.sunPosition,\r\n        targetPosition,\r\n        0.25,\r\n        delta\r\n      );\r\n    }\r\n  });\r\n  return (\r\n    <animated.group position={springs.position}>\r\n      <Sky\r\n        ref={sunRef}\r\n        distance={window.innerWidth}\r\n        sunPosition={targetPosition}\r\n        inclination={inclination}\r\n        azimuth={azimuth}\r\n        mieCoefficient={mieCoefficient}\r\n        mieDirectionalG={mieDirectionalG}\r\n        rayleigh={rayleigh}\r\n        turbidity={turbidity}\r\n      />\r\n    </animated.group>\r\n  );\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { DoubleSide } from \"three\";\r\nimport FormatTexture from \"../hooks/FormatTexture\";\r\nconst Planet = ({\r\n  heightMapSrc,\r\n  AO,\r\n  bumpScale,\r\n  smokeScale,\r\n  textureMapSrc,\r\n  normalMapSrc,\r\n  smoothMapSrc,\r\n  metallicMapSrc,\r\n  edgeMapSrc,\r\n  args,\r\n  animate,\r\n  ...props\r\n}) => {\r\n  // not sure where to add this map will do rnd\r\n  // const smoothMap = FormatTexture(smoothMapSrc);\r\n\r\n  const heightMap = FormatTexture(heightMapSrc);\r\n  const AoTextureMap = FormatTexture(AO);\r\n  const textureMap = FormatTexture(textureMapSrc);\r\n  const normalMap = FormatTexture(normalMapSrc);\r\n  const metallicMap = FormatTexture(metallicMapSrc);\r\n  const edgeMap = FormatTexture(edgeMapSrc);\r\n  const TerrainMaterialRef = useRef();\r\n  const AnimateFrame = ({ meshRef }) => {\r\n    useFrame(({ clock }, delta) => {\r\n      animate({ meshRef, clock, delta });\r\n    });\r\n  };\r\n  return (\r\n    <group {...props}>\r\n      {animate && <AnimateFrame meshRef={TerrainMaterialRef} />}\r\n      <mesh ref={TerrainMaterialRef} transparent={true}>\r\n        <sphereGeometry\r\n          attach=\"geometry\"\r\n          args={args}\r\n          receiveShadow\r\n          transparent={true}\r\n        />\r\n        <meshPhongMaterial\r\n          bumpScale={bumpScale}\r\n          attach=\"material\"\r\n          map={textureMap}\r\n          aoMap={AoTextureMap}\r\n          bumpMap={heightMap}\r\n          lightMap={edgeMap}\r\n          metalnessMap={metallicMap}\r\n          normalMap={normalMap}\r\n          side={DoubleSide}\r\n        />\r\n      </mesh>\r\n    </group>\r\n  );\r\n};\r\nexport default Planet\r\n;\r\n"],"names":["CannonSphere","_ref","children","args","mass","props","_objectWithoutProperties","_excluded","_useSphere","useSphere","_objectSpread","useRef","_useSphere2","_slicedToArray","ref","api","_jsx","onClick","e","applyImpulse","SmallRoom","animate","group","nodes","useGLTF","AnimateFrame","_ref2","meshRef","useFrame","_ref3","delta","clock","_jsxs","dispose","object","Scene","SpaceJam","menu","jsonData","navigate","useNavigate","className","Suspense","fallback","Loader","Canvas","performance","min","flat","linear","shadows","PerspectiveCamera","makeDefault","fov","far","near","position","space","rotation","aspect","window","innerWidth","innerHeight","color","intensity","castShadow","SunRise","turbidity","azimuth","inclination","mieCoefficient","mieDirectionalG","rayleigh","attach","Stars","radius","depth","count","star_factor","factor","saturation","fade","OrbitControls","minPolarAngle","maxPolarAngle","maxAzimuthAngle","minAzimuthAngle","maxDistance","minDistance","enablePan","Physics","defaultContactMaterial","contactEquationRelaxation","friction","gravity","allowSleep","CannonPlane","userData","id","receiveShadow","opacity","transparent","Planet","bumpScale","TextureOptions","current","set","oldTime","CannonBox","CreateText","textstring","fontSize","fontHeight","type","transitionViewIfSupported","route","hover","Ship","EffectComposer","DepthOfField","focusDistance","focalLength","bokehScale","height","Bloom","luminanceThreshold","luminanceSmoothing","Noise","Vignette","eskil","offset","darkness","_ref$inclination","_ref$azimuth","_ref$mieCoefficient","_ref$mieDirectionalG","_ref$rayleigh","_ref$turbidity","_useState","useState","lightsOn","_useState2","snap","sunRef","springs","useSpring","targetPosition","Vector3","state","easing","material","uniforms","sunPosition","animated","Sky","distance","heightMapSrc","AO","textureMapSrc","smokeScale","normalMapSrc","metallicMapSrc","smoothMapSrc","edgeMapSrc","heightMap","FormatTexture","AoTextureMap","textureMap","normalMap","metallicMap","edgeMap","TerrainMaterialRef","map","aoMap","bumpMap","lightMap","metalnessMap","side","DoubleSide"],"sourceRoot":""}