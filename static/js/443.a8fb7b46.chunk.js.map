{"version":3,"file":"static/js/443.a8fb7b46.chunk.js","mappings":"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","sources":["../node_modules/proxy-compare/src/index.ts","../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","../node_modules/use-sync-external-store/shim/index.js","../node_modules/valtio/esm/react.mjs","../node_modules/valtio/esm/vanilla.mjs"],"sourcesContent":["// symbols\nconst TRACK_MEMO_SYMBOL = Symbol();\nconst GET_ORIGINAL_SYMBOL = Symbol();\n\n// properties\nconst AFFECTED_PROPERTY = 'a';\nconst IS_TARGET_COPIED_PROPERTY = 'f';\nconst PROXY_PROPERTY = 'p';\nconst PROXY_CACHE_PROPERTY = 'c';\nconst TARGET_CACHE_PROPERTY = 't';\nconst NEXT_OBJECT_PROPERTY = 'n';\nconst CHANGED_PROPERTY = 'g';\nconst HAS_KEY_PROPERTY = 'h';\nconst ALL_OWN_KEYS_PROPERTY = 'w';\nconst HAS_OWN_KEY_PROPERTY = 'o';\nconst KEYS_PROPERTY = 'k';\n\n// function to create a new bare proxy\nlet newProxy = <T extends object>(\n  target: T,\n  handler: ProxyHandler<T>,\n) => new Proxy(target, handler);\n\n// get object prototype\nconst getProto = Object.getPrototypeOf;\n\nconst objectsToTrack = new WeakMap<object, boolean>();\n\n// check if obj is a plain object or an array\nconst isObjectToTrack = <T>(obj: T): obj is T extends object ? T : never => (\n  obj && (objectsToTrack.has(obj as unknown as object)\n    ? objectsToTrack.get(obj as unknown as object) as boolean\n    : (getProto(obj) === Object.prototype || getProto(obj) === Array.prototype)\n  )\n);\n\n// check if it is object\nconst isObject = (x: unknown): x is object => (\n  typeof x === 'object' && x !== null\n);\n\n// Properties that are both non-configurable and non-writable will break\n// the proxy get trap when we try to return a recursive/child compare proxy\n// from them. We can avoid this by making a copy of the target object with\n// all descriptors marked as configurable, see `copyTargetObject`.\n// See: https://github.com/dai-shi/proxy-compare/pull/8\nconst needsToCopyTargetObject = (obj: object) => (\n  Object.values(Object.getOwnPropertyDescriptors(obj)).some(\n    (descriptor) => !descriptor.configurable && !descriptor.writable,\n  )\n);\n\n// Make a copy with all descriptors marked as configurable.\nconst copyTargetObject = <T extends object>(obj: T): T => {\n  if (Array.isArray(obj)) {\n    // Arrays need a special way to copy\n    return Array.from(obj) as T;\n  }\n  // For non-array objects, we create a new object keeping the prototype\n  // with changing all configurable options (otherwise, proxies will complain)\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  Object.values(descriptors).forEach((desc) => { desc.configurable = true; });\n  return Object.create(getProto(obj), descriptors);\n};\n\ntype HasKeySet = Set<string | symbol>\ntype HasOwnKeySet = Set<string | symbol>\ntype KeysSet = Set<string | symbol>\ntype Used = {\n  [HAS_KEY_PROPERTY]?: HasKeySet;\n  [ALL_OWN_KEYS_PROPERTY]?: true;\n  [HAS_OWN_KEY_PROPERTY]?: HasOwnKeySet;\n  [KEYS_PROPERTY]?: KeysSet;\n};\ntype Affected = WeakMap<object, Used>;\ntype ProxyHandlerState<T extends object> = {\n  readonly [IS_TARGET_COPIED_PROPERTY]: boolean;\n  [PROXY_PROPERTY]?: T;\n  [PROXY_CACHE_PROPERTY]?: ProxyCache<object> | undefined;\n  [TARGET_CACHE_PROPERTY]?: TargetCache<object> | undefined;\n  [AFFECTED_PROPERTY]?: Affected;\n}\ntype ProxyCache<T extends object> = WeakMap<\n  object,\n  readonly [ProxyHandler<T>, ProxyHandlerState<T>]\n>;\ntype TargetCache<T extends object> = WeakMap<\n  object,\n  readonly [target: T, copiedTarget?: T]\n>;\n\nconst createProxyHandler = <T extends object>(origObj: T, isTargetCopied: boolean) => {\n  const state: ProxyHandlerState<T> = {\n    [IS_TARGET_COPIED_PROPERTY]: isTargetCopied,\n  };\n  let trackObject = false; // for trackMemo\n  const recordUsage = (\n    type:\n      | typeof HAS_KEY_PROPERTY\n      | typeof ALL_OWN_KEYS_PROPERTY\n      | typeof HAS_OWN_KEY_PROPERTY\n      | typeof KEYS_PROPERTY,\n    key?: string | symbol,\n  ) => {\n    if (!trackObject) {\n      let used = (state[AFFECTED_PROPERTY] as Affected).get(origObj);\n      if (!used) {\n        used = {};\n        (state[AFFECTED_PROPERTY] as Affected).set(origObj, used);\n      }\n      if (type === ALL_OWN_KEYS_PROPERTY) {\n        used[ALL_OWN_KEYS_PROPERTY] = true;\n      } else {\n        let set = used[type];\n        if (!set) {\n          set = new Set();\n          used[type] = set;\n        }\n        set.add(key as string | symbol);\n      }\n    }\n  };\n  const recordObjectAsUsed = () => {\n    trackObject = true;\n    (state[AFFECTED_PROPERTY] as Affected).delete(origObj);\n  };\n  const handler: ProxyHandler<T> = {\n    get(target, key) {\n      if (key === GET_ORIGINAL_SYMBOL) {\n        return origObj;\n      }\n      recordUsage(KEYS_PROPERTY, key);\n      return createProxy(\n        Reflect.get(target, key),\n        (state[AFFECTED_PROPERTY] as Affected),\n        state[PROXY_CACHE_PROPERTY],\n        state[TARGET_CACHE_PROPERTY],\n      );\n    },\n    has(target, key) {\n      if (key === TRACK_MEMO_SYMBOL) {\n        recordObjectAsUsed();\n        return true;\n      }\n      recordUsage(HAS_KEY_PROPERTY, key);\n      return Reflect.has(target, key);\n    },\n    getOwnPropertyDescriptor(target, key) {\n      recordUsage(HAS_OWN_KEY_PROPERTY, key);\n      return Reflect.getOwnPropertyDescriptor(target, key);\n    },\n    ownKeys(target) {\n      recordUsage(ALL_OWN_KEYS_PROPERTY);\n      return Reflect.ownKeys(target);\n    },\n  };\n  if (isTargetCopied) {\n    handler.set = handler.deleteProperty = () => false;\n  }\n  return [handler, state] as const;\n};\n\nconst getOriginalObject = <T extends object>(obj: T) => (\n  // unwrap proxy\n  (obj as { [GET_ORIGINAL_SYMBOL]?: typeof obj })[GET_ORIGINAL_SYMBOL]\n  // otherwise\n  || obj\n);\n\n/**\n * Create a proxy.\n *\n * This function will create a proxy at top level and proxy nested objects as you access them,\n * in order to keep track of which properties were accessed via get/has proxy handlers:\n *\n * NOTE: Printing of WeakMap is hard to inspect and not very readable\n * for this purpose you can use the `affectedToPathList` helper.\n *\n * @param {object} obj - Object that will be wrapped on the proxy.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that will hold the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [proxyCache] -\n * WeakMap that will help keep referential identity for proxies.\n * @returns {Proxy<object>} - Object wrapped in a proxy.\n *\n * @example\n * import { createProxy } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n * const proxy = createProxy(original, affected);\n *\n * proxy.a // Will mark as used and track its value.\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"a\"\n *\n * proxy.d // Will mark \"d\" as accessed to track and proxy itself ({ e: \"3\" }).\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"d\"\n */\nexport const createProxy = <T>(\n  obj: T,\n  affected: WeakMap<object, unknown>,\n  proxyCache?: WeakMap<object, unknown>,\n  targetCache?: WeakMap<object, unknown>,\n): T => {\n  if (!isObjectToTrack(obj)) return obj;\n  let targetAndCopied = (\n    targetCache && (targetCache as TargetCache<typeof obj>).get(obj)\n  );\n  if (!targetAndCopied) {\n    const target = getOriginalObject(obj);\n    if (needsToCopyTargetObject(target)) {\n      targetAndCopied = [target, copyTargetObject(target)];\n    } else {\n      targetAndCopied = [target];\n    }\n    targetCache?.set(obj, targetAndCopied);\n  }\n  const [target, copiedTarget] = targetAndCopied;\n  let handlerAndState = (\n    proxyCache && (proxyCache as ProxyCache<typeof target>).get(target)\n  );\n  if (\n    !handlerAndState\n    || handlerAndState[1][IS_TARGET_COPIED_PROPERTY] !== !!copiedTarget\n  ) {\n    handlerAndState = createProxyHandler<typeof target>(target, !!copiedTarget);\n    handlerAndState[1][PROXY_PROPERTY] = newProxy(\n      copiedTarget || target,\n      handlerAndState[0],\n    );\n    if (proxyCache) {\n      proxyCache.set(target, handlerAndState);\n    }\n  }\n  handlerAndState[1][AFFECTED_PROPERTY] = affected as Affected;\n  handlerAndState[1][PROXY_CACHE_PROPERTY] = proxyCache as ProxyCache<object> | undefined;\n  handlerAndState[1][TARGET_CACHE_PROPERTY] = targetCache as TargetCache<object> | undefined;\n  return handlerAndState[1][PROXY_PROPERTY] as typeof target;\n};\n\nconst isAllOwnKeysChanged = (prevObj: object, nextObj: object) => {\n  const prevKeys = Reflect.ownKeys(prevObj);\n  const nextKeys = Reflect.ownKeys(nextObj);\n  return prevKeys.length !== nextKeys.length\n    || prevKeys.some((k, i) => k !== nextKeys[i]);\n};\n\ntype ChangedCache = WeakMap<object, {\n  [NEXT_OBJECT_PROPERTY]: object;\n  [CHANGED_PROPERTY]: boolean;\n}>;\n\n/**\n * Compare changes on objects.\n *\n * This will compare the affected properties on tracked objects inside the proxy\n * to check if there were any changes made to it,\n * by default if no property was accessed on the proxy it will attempt to do a\n * reference equality check for the objects provided (Object.is(a, b)). If you access a property\n * on the proxy, then isChanged will only compare the affected properties.\n *\n * @param {object} prevObj - The previous object to compare.\n * @param {object} nextObj - Object to compare with the previous one.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that holds the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [cache] -\n * WeakMap that holds a cache of the comparisons for better performance with repetitive comparisons,\n * and to avoid infinite loop with circular structures.\n * @returns {boolean} - Boolean indicating if the affected property on the object has changed.\n *\n * @example\n * import { createProxy, isChanged } from 'proxy-compare';\n *\n * const obj = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(obj, affected);\n *\n * proxy.a\n *\n * isChanged(obj, { a: \"1\" }, affected) // false\n *\n * proxy.a = \"2\"\n *\n * isChanged(obj, { a: \"1\" }, affected) // true\n */\n\nexport const isChanged = (\n  prevObj: unknown,\n  nextObj: unknown,\n  affected: WeakMap<object, unknown>,\n  cache?: WeakMap<object, unknown>,\n): boolean => {\n  if (Object.is(prevObj, nextObj)) {\n    return false;\n  }\n  if (!isObject(prevObj) || !isObject(nextObj)) return true;\n  const used = (affected as Affected).get(getOriginalObject(prevObj));\n  if (!used) return true;\n  if (cache) {\n    const hit = (cache as ChangedCache).get(prevObj);\n    if (hit && hit[NEXT_OBJECT_PROPERTY] === nextObj) {\n      return hit[CHANGED_PROPERTY];\n    }\n    // for object with cycles\n    (cache as ChangedCache).set(prevObj, {\n      [NEXT_OBJECT_PROPERTY]: nextObj,\n      [CHANGED_PROPERTY]: false,\n    });\n  }\n  let changed: boolean | null = null;\n  try {\n    for (const key of used[HAS_KEY_PROPERTY] || []) {\n      changed = Reflect.has(prevObj, key) !== Reflect.has(nextObj, key);\n      if (changed) return changed;\n    }\n    if (used[ALL_OWN_KEYS_PROPERTY] === true) {\n      changed = isAllOwnKeysChanged(prevObj, nextObj);\n      if (changed) return changed;\n    } else {\n      for (const key of used[HAS_OWN_KEY_PROPERTY] || []) {\n        const hasPrev = !!Reflect.getOwnPropertyDescriptor(prevObj, key);\n        const hasNext = !!Reflect.getOwnPropertyDescriptor(nextObj, key);\n        changed = hasPrev !== hasNext;\n        if (changed) return changed;\n      }\n    }\n    for (const key of used[KEYS_PROPERTY] || []) {\n      changed = isChanged(\n        (prevObj as any)[key],\n        (nextObj as any)[key],\n        affected,\n        cache,\n      );\n      if (changed) return changed;\n    }\n    if (changed === null) changed = true;\n    return changed;\n  } finally {\n    if (cache) {\n      cache.set(prevObj, {\n        [NEXT_OBJECT_PROPERTY]: nextObj,\n        [CHANGED_PROPERTY]: changed,\n      });\n    }\n  }\n};\n\n// explicitly track object with memo\nexport const trackMemo = (obj: unknown) => {\n  if (isObjectToTrack(obj)) {\n    return TRACK_MEMO_SYMBOL in obj;\n  }\n  return false;\n};\n\n/**\n * Unwrap proxy to get the original object.\n *\n * Used to retrieve the original object used to create the proxy instance with `createProxy`.\n *\n * @param {Proxy<object>} obj -  The proxy wrapper of the originial object.\n * @returns {object | null} - Return either the unwrapped object if exists.\n *\n * @example\n * import { createProxy, getUntracked } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n * const originalFromProxy = getUntracked(proxy)\n *\n * Object.is(original, originalFromProxy) // true\n * isChanged(original, originalFromProxy, affected) // false\n */\nexport const getUntracked = <T>(obj: T): T | null => {\n  if (isObjectToTrack(obj)) {\n    return (obj as { [GET_ORIGINAL_SYMBOL]?: T })[GET_ORIGINAL_SYMBOL] || null;\n  }\n  return null;\n};\n\n/**\n * Mark object to be tracked.\n *\n * This function marks an object that will be passed into `createProxy`\n * as marked to track or not. By default only Array and Object are marked to track,\n * so this is useful for example to mark a class instance to track or to mark a object\n * to be untracked when creating your proxy.\n *\n * @param obj - Object to mark as tracked or not.\n * @param mark - Boolean indicating whether you want to track this object or not.\n * @returns - No return.\n *\n * @example\n * import { createProxy, markToTrack, isChanged } from 'proxy-compare';\n *\n * const nested = { e: \"3\" }\n *\n * markToTrack(nested, false)\n *\n * const original = { a: \"1\", c: \"2\", d: nested };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n *\n * proxy.d.e\n *\n * isChanged(original, { d: { e: \"3\" } }, affected) // true\n */\nexport const markToTrack = (obj: object, mark = true) => {\n  objectsToTrack.set(obj, mark);\n};\n\n/**\n * Convert `affected` to path list\n *\n * `affected` is a weak map which is not printable.\n * This function is can convert it to printable path list.\n * It's for debugging purpose.\n *\n * @param obj - An object that is used with `createProxy`.\n * @param affected - A weak map that is used with `createProxy`.\n * @param onlyWithValues - An optional boolean to exclude object getters.\n * @returns - An array of paths.\n */\nexport const affectedToPathList = (\n  obj: unknown,\n  affected: WeakMap<object, unknown>,\n  onlyWithValues?: boolean,\n) => {\n  const list: (string | symbol)[][] = [];\n  const seen = new WeakSet();\n  const walk = (x: unknown, path?: (string | symbol)[]) => {\n    if (seen.has(x as object)) {\n      // for object with cycles\n      return;\n    }\n    if (isObject(x)) {\n      seen.add(x);\n    }\n    const used = isObject(x) && (affected as Affected).get(getOriginalObject(x));\n    if (used) {\n      used[HAS_KEY_PROPERTY]?.forEach((key) => {\n        const segment = `:has(${String(key)})`;\n        list.push(path ? [...path, segment] : [segment]);\n      });\n      if (used[ALL_OWN_KEYS_PROPERTY] === true) {\n        const segment = ':ownKeys';\n        list.push(path ? [...path, segment] : [segment]);\n      } else {\n        used[HAS_OWN_KEY_PROPERTY]?.forEach((key) => {\n          const segment = `:hasOwn(${String(key)})`;\n          list.push(path ? [...path, segment] : [segment]);\n        });\n      }\n      used[KEYS_PROPERTY]?.forEach((key) => {\n        if (!onlyWithValues || 'value' in (Object.getOwnPropertyDescriptor(x, key) || {})) {\n          walk((x as any)[key], path ? [...path, key] : [key]);\n        }\n      });\n    } else if (path) {\n      list.push(path);\n    }\n  };\n  walk(obj);\n  return list;\n};\n\n/**\n * replace newProxy function.\n *\n * This can be used if you want to use proxy-polyfill.\n * Note that proxy-polyfill can't polyfill everything.\n * Use it at your own risk.\n */\nexport const replaceNewProxy = (fn: typeof newProxy) => {\n  newProxy = fn;\n};\n","/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","import ReactExports, { useRef, useCallback, useEffect, useMemo, useDebugValue } from 'react';\nimport { isChanged, createProxy, affectedToPathList } from 'proxy-compare';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/index.js';\nimport { subscribe, snapshot } from 'valtio/vanilla';\n\nconst { use } = ReactExports;\nconst { useSyncExternalStore } = useSyncExternalStoreExports;\nconst useAffectedDebugValue = (state, affected) => {\n  const pathList = useRef();\n  useEffect(() => {\n    pathList.current = affectedToPathList(state, affected, true);\n  });\n  useDebugValue(pathList.current);\n};\nconst targetCache = /* @__PURE__ */ new WeakMap();\nfunction useSnapshot(proxyObject, options) {\n  const notifyInSync = options == null ? void 0 : options.sync;\n  const lastSnapshot = useRef();\n  const lastAffected = useRef();\n  let inRender = true;\n  const currSnapshot = useSyncExternalStore(\n    useCallback(\n      (callback) => {\n        const unsub = subscribe(proxyObject, callback, notifyInSync);\n        callback();\n        return unsub;\n      },\n      [proxyObject, notifyInSync]\n    ),\n    () => {\n      const nextSnapshot = snapshot(proxyObject, use);\n      try {\n        if (!inRender && lastSnapshot.current && lastAffected.current && !isChanged(\n          lastSnapshot.current,\n          nextSnapshot,\n          lastAffected.current,\n          /* @__PURE__ */ new WeakMap()\n        )) {\n          return lastSnapshot.current;\n        }\n      } catch (e) {\n      }\n      return nextSnapshot;\n    },\n    () => snapshot(proxyObject, use)\n  );\n  inRender = false;\n  const currAffected = /* @__PURE__ */ new WeakMap();\n  useEffect(() => {\n    lastSnapshot.current = currSnapshot;\n    lastAffected.current = currAffected;\n  });\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\") {\n    useAffectedDebugValue(currSnapshot, currAffected);\n  }\n  const proxyCache = useMemo(() => /* @__PURE__ */ new WeakMap(), []);\n  return createProxy(\n    currSnapshot,\n    currAffected,\n    proxyCache,\n    targetCache\n  );\n}\n\nexport { useSnapshot };\n","import { markToTrack, getUntracked } from 'proxy-compare';\n\nconst isObject = (x) => typeof x === \"object\" && x !== null;\nconst proxyStateMap = /* @__PURE__ */ new WeakMap();\nconst refSet = /* @__PURE__ */ new WeakSet();\nconst buildProxyFunction = (objectIs = Object.is, newProxy = (target, handler) => new Proxy(target, handler), canProxy = (x) => isObject(x) && !refSet.has(x) && (Array.isArray(x) || !(Symbol.iterator in x)) && !(x instanceof WeakMap) && !(x instanceof WeakSet) && !(x instanceof Error) && !(x instanceof Number) && !(x instanceof Date) && !(x instanceof String) && !(x instanceof RegExp) && !(x instanceof ArrayBuffer), defaultHandlePromise = (promise) => {\n  switch (promise.status) {\n    case \"fulfilled\":\n      return promise.value;\n    case \"rejected\":\n      throw promise.reason;\n    default:\n      throw promise;\n  }\n}, snapCache = /* @__PURE__ */ new WeakMap(), createSnapshot = (target, version, handlePromise = defaultHandlePromise) => {\n  const cache = snapCache.get(target);\n  if ((cache == null ? void 0 : cache[0]) === version) {\n    return cache[1];\n  }\n  const snap = Array.isArray(target) ? [] : Object.create(Object.getPrototypeOf(target));\n  markToTrack(snap, true);\n  snapCache.set(target, [version, snap]);\n  Reflect.ownKeys(target).forEach((key) => {\n    if (Object.getOwnPropertyDescriptor(snap, key)) {\n      return;\n    }\n    const value = Reflect.get(target, key);\n    const desc = {\n      value,\n      enumerable: true,\n      // This is intentional to avoid copying with proxy-compare.\n      // It's still non-writable, so it avoids assigning a value.\n      configurable: true\n    };\n    if (refSet.has(value)) {\n      markToTrack(value, false);\n    } else if (value instanceof Promise) {\n      delete desc.value;\n      desc.get = () => handlePromise(value);\n    } else if (proxyStateMap.has(value)) {\n      const [target2, ensureVersion] = proxyStateMap.get(\n        value\n      );\n      desc.value = createSnapshot(\n        target2,\n        ensureVersion(),\n        handlePromise\n      );\n    }\n    Object.defineProperty(snap, key, desc);\n  });\n  return snap;\n}, proxyCache = /* @__PURE__ */ new WeakMap(), versionHolder = [1, 1], proxyFunction = (initialObject) => {\n  if (!isObject(initialObject)) {\n    throw new Error(\"object required\");\n  }\n  const found = proxyCache.get(initialObject);\n  if (found) {\n    return found;\n  }\n  let version = versionHolder[0];\n  const listeners = /* @__PURE__ */ new Set();\n  const notifyUpdate = (op, nextVersion = ++versionHolder[0]) => {\n    if (version !== nextVersion) {\n      version = nextVersion;\n      listeners.forEach((listener) => listener(op, nextVersion));\n    }\n  };\n  let checkVersion = versionHolder[1];\n  const ensureVersion = (nextCheckVersion = ++versionHolder[1]) => {\n    if (checkVersion !== nextCheckVersion && !listeners.size) {\n      checkVersion = nextCheckVersion;\n      propProxyStates.forEach(([propProxyState]) => {\n        const propVersion = propProxyState[1](nextCheckVersion);\n        if (propVersion > version) {\n          version = propVersion;\n        }\n      });\n    }\n    return version;\n  };\n  const createPropListener = (prop) => (op, nextVersion) => {\n    const newOp = [...op];\n    newOp[1] = [prop, ...newOp[1]];\n    notifyUpdate(newOp, nextVersion);\n  };\n  const propProxyStates = /* @__PURE__ */ new Map();\n  const addPropListener = (prop, propProxyState) => {\n    if ((import.meta.env && import.meta.env.MODE) !== \"production\" && propProxyStates.has(prop)) {\n      throw new Error(\"prop listener already exists\");\n    }\n    if (listeners.size) {\n      const remove = propProxyState[3](createPropListener(prop));\n      propProxyStates.set(prop, [propProxyState, remove]);\n    } else {\n      propProxyStates.set(prop, [propProxyState]);\n    }\n  };\n  const removePropListener = (prop) => {\n    var _a;\n    const entry = propProxyStates.get(prop);\n    if (entry) {\n      propProxyStates.delete(prop);\n      (_a = entry[1]) == null ? void 0 : _a.call(entry);\n    }\n  };\n  const addListener = (listener) => {\n    listeners.add(listener);\n    if (listeners.size === 1) {\n      propProxyStates.forEach(([propProxyState, prevRemove], prop) => {\n        if ((import.meta.env && import.meta.env.MODE) !== \"production\" && prevRemove) {\n          throw new Error(\"remove already exists\");\n        }\n        const remove = propProxyState[3](createPropListener(prop));\n        propProxyStates.set(prop, [propProxyState, remove]);\n      });\n    }\n    const removeListener = () => {\n      listeners.delete(listener);\n      if (listeners.size === 0) {\n        propProxyStates.forEach(([propProxyState, remove], prop) => {\n          if (remove) {\n            remove();\n            propProxyStates.set(prop, [propProxyState]);\n          }\n        });\n      }\n    };\n    return removeListener;\n  };\n  const baseObject = Array.isArray(initialObject) ? [] : Object.create(Object.getPrototypeOf(initialObject));\n  const handler = {\n    deleteProperty(target, prop) {\n      const prevValue = Reflect.get(target, prop);\n      removePropListener(prop);\n      const deleted = Reflect.deleteProperty(target, prop);\n      if (deleted) {\n        notifyUpdate([\"delete\", [prop], prevValue]);\n      }\n      return deleted;\n    },\n    set(target, prop, value, receiver) {\n      const hasPrevValue = Reflect.has(target, prop);\n      const prevValue = Reflect.get(target, prop, receiver);\n      if (hasPrevValue && (objectIs(prevValue, value) || proxyCache.has(value) && objectIs(prevValue, proxyCache.get(value)))) {\n        return true;\n      }\n      removePropListener(prop);\n      if (isObject(value)) {\n        value = getUntracked(value) || value;\n      }\n      let nextValue = value;\n      if (value instanceof Promise) {\n        value.then((v) => {\n          value.status = \"fulfilled\";\n          value.value = v;\n          notifyUpdate([\"resolve\", [prop], v]);\n        }).catch((e) => {\n          value.status = \"rejected\";\n          value.reason = e;\n          notifyUpdate([\"reject\", [prop], e]);\n        });\n      } else {\n        if (!proxyStateMap.has(value) && canProxy(value)) {\n          nextValue = proxyFunction(value);\n        }\n        const childProxyState = !refSet.has(nextValue) && proxyStateMap.get(nextValue);\n        if (childProxyState) {\n          addPropListener(prop, childProxyState);\n        }\n      }\n      Reflect.set(target, prop, nextValue, receiver);\n      notifyUpdate([\"set\", [prop], value, prevValue]);\n      return true;\n    }\n  };\n  const proxyObject = newProxy(baseObject, handler);\n  proxyCache.set(initialObject, proxyObject);\n  const proxyState = [\n    baseObject,\n    ensureVersion,\n    createSnapshot,\n    addListener\n  ];\n  proxyStateMap.set(proxyObject, proxyState);\n  Reflect.ownKeys(initialObject).forEach((key) => {\n    const desc = Object.getOwnPropertyDescriptor(\n      initialObject,\n      key\n    );\n    if (\"value\" in desc) {\n      proxyObject[key] = initialObject[key];\n      delete desc.value;\n      delete desc.writable;\n    }\n    Object.defineProperty(baseObject, key, desc);\n  });\n  return proxyObject;\n}) => [\n  // public functions\n  proxyFunction,\n  // shared state\n  proxyStateMap,\n  refSet,\n  // internal things\n  objectIs,\n  newProxy,\n  canProxy,\n  defaultHandlePromise,\n  snapCache,\n  createSnapshot,\n  proxyCache,\n  versionHolder\n];\nconst [defaultProxyFunction] = buildProxyFunction();\nfunction proxy(initialObject = {}) {\n  return defaultProxyFunction(initialObject);\n}\nfunction getVersion(proxyObject) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  return proxyState == null ? void 0 : proxyState[1]();\n}\nfunction subscribe(proxyObject, callback, notifyInSync) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\" && !proxyState) {\n    console.warn(\"Please use proxy object\");\n  }\n  let promise;\n  const ops = [];\n  const addListener = proxyState[3];\n  let isListenerActive = false;\n  const listener = (op) => {\n    ops.push(op);\n    if (notifyInSync) {\n      callback(ops.splice(0));\n      return;\n    }\n    if (!promise) {\n      promise = Promise.resolve().then(() => {\n        promise = void 0;\n        if (isListenerActive) {\n          callback(ops.splice(0));\n        }\n      });\n    }\n  };\n  const removeListener = addListener(listener);\n  isListenerActive = true;\n  return () => {\n    isListenerActive = false;\n    removeListener();\n  };\n}\nfunction snapshot(proxyObject, handlePromise) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\" && !proxyState) {\n    console.warn(\"Please use proxy object\");\n  }\n  const [target, ensureVersion, createSnapshot] = proxyState;\n  return createSnapshot(target, ensureVersion(), handlePromise);\n}\nfunction ref(obj) {\n  refSet.add(obj);\n  return obj;\n}\nconst unstable_buildProxyFunction = buildProxyFunction;\n\nexport { getVersion, proxy, ref, snapshot, subscribe, unstable_buildProxyFunction };\n"],"names":["e","Symbol","t","r","n","o","Proxy","s","Object","getPrototypeOf","c","WeakMap","l","has","get","prototype","Array","f","i","isArray","from","getOwnPropertyDescriptors","values","forEach","configurable","create","u","a","p","g","some","writable","set","_g","_g2","_slicedToArray","y","h","w","Set","add","Reflect","delete","getOwnPropertyDescriptor","ownKeys","deleteProperty","is","_step","_iterator","_createForOfIteratorHelper","done","value","err","length","_step2","_iterator2","_step3","_iterator3","k","arguments","undefined","WeakSet","concat","String","push","_toConsumableArray","require","b","useState","m","useEffect","useLayoutEffect","useDebugValue","getSnapshot","d","window","document","createElement","inst","exports","useSyncExternalStore","module","use","ReactExports","useSyncExternalStoreExports","useAffectedDebugValue","state","affected","pathList","useRef","current","affectedToPathList","targetCache","useSnapshot","proxyObject","options","notifyInSync","sync","lastSnapshot","lastAffected","inRender","currSnapshot","useCallback","callback","unsub","subscribe","nextSnapshot","snapshot","isChanged","currAffected","proxyCache","useMemo","createProxy","isObject","x","proxyStateMap","refSet","buildProxyFunction","objectIs","newProxy","target","handler","canProxy","iterator","Error","Number","Date","RegExp","ArrayBuffer","defaultHandlePromise","promise","status","reason","snapCache","createSnapshot","version","handlePromise","cache","snap","markToTrack","key","desc","enumerable","Promise","_proxyStateMap$get","_proxyStateMap$get2","target2","ensureVersion","defineProperty","versionHolder","proxyFunction","initialObject","found","listeners","notifyUpdate","op","nextVersion","listener","checkVersion","createPropListener","prop","newOp","propProxyStates","Map","removePropListener","_a","entry","call","baseObject","prevValue","deleted","receiver","hasPrevValue","getUntracked","nextValue","then","v","catch","childProxyState","propProxyState","size","remove","addPropListener","proxyState","nextCheckVersion","_ref","propVersion","_ref3","_ref4","_ref5","_ref6","_buildProxyFunction","defaultProxyFunction","proxy","console","warn","ops","addListener","isListenerActive","removeListener","splice","resolve","_proxyState"],"sourceRoot":""}